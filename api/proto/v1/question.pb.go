// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/v1/question.proto

// ============= 基础定义 =============

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HyperTextTagType 定义超文本标签类型
type HyperTextTagType int32

const (
	HyperTextTagType_HYPER_TEXT_TAG_TYPE_UNSPECIFIED HyperTextTagType = 0
	HyperTextTagType_HYPER_TEXT_TAG_TYPE_IMAGE       HyperTextTagType = 1
	HyperTextTagType_HYPER_TEXT_TAG_TYPE_AUDIO       HyperTextTagType = 2
	HyperTextTagType_HYPER_TEXT_TAG_TYPE_URL         HyperTextTagType = 3
	HyperTextTagType_HYPER_TEXT_TAG_TYPE_TEXT        HyperTextTagType = 4
	HyperTextTagType_HYPER_TEXT_TAG_TYPE_ANIMATION   HyperTextTagType = 5
	HyperTextTagType_HYPER_TEXT_TAG_TYPE_V_STACK     HyperTextTagType = 6 // 垂直布局容器
	HyperTextTagType_HYPER_TEXT_TAG_TYPE_H_STACK     HyperTextTagType = 7 // 水平布局容器
)

// Enum value maps for HyperTextTagType.
var (
	HyperTextTagType_name = map[int32]string{
		0: "HYPER_TEXT_TAG_TYPE_UNSPECIFIED",
		1: "HYPER_TEXT_TAG_TYPE_IMAGE",
		2: "HYPER_TEXT_TAG_TYPE_AUDIO",
		3: "HYPER_TEXT_TAG_TYPE_URL",
		4: "HYPER_TEXT_TAG_TYPE_TEXT",
		5: "HYPER_TEXT_TAG_TYPE_ANIMATION",
		6: "HYPER_TEXT_TAG_TYPE_V_STACK",
		7: "HYPER_TEXT_TAG_TYPE_H_STACK",
	}
	HyperTextTagType_value = map[string]int32{
		"HYPER_TEXT_TAG_TYPE_UNSPECIFIED": 0,
		"HYPER_TEXT_TAG_TYPE_IMAGE":       1,
		"HYPER_TEXT_TAG_TYPE_AUDIO":       2,
		"HYPER_TEXT_TAG_TYPE_URL":         3,
		"HYPER_TEXT_TAG_TYPE_TEXT":        4,
		"HYPER_TEXT_TAG_TYPE_ANIMATION":   5,
		"HYPER_TEXT_TAG_TYPE_V_STACK":     6,
		"HYPER_TEXT_TAG_TYPE_H_STACK":     7,
	}
)

func (x HyperTextTagType) Enum() *HyperTextTagType {
	p := new(HyperTextTagType)
	*p = x
	return p
}

func (x HyperTextTagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HyperTextTagType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_question_proto_enumTypes[0].Descriptor()
}

func (HyperTextTagType) Type() protoreflect.EnumType {
	return &file_proto_v1_question_proto_enumTypes[0]
}

func (x HyperTextTagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HyperTextTagType.Descriptor instead.
func (HyperTextTagType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{0}
}

// QuestionOptionType 选项类型
type QuestionOptionType int32

const (
	// 未指定类型，用于处理未知的新类型，客户端应该拒绝处理该类型的选项
	QuestionOptionType_QUESTION_OPTION_TYPE_UNSPECIFIED QuestionOptionType = 0
	QuestionOptionType_QUESTION_OPTION_TYPE_TEXT        QuestionOptionType = 1 // 文本类型
	QuestionOptionType_QUESTION_OPTION_TYPE_IMAGE       QuestionOptionType = 2 // 图片类型
	QuestionOptionType_QUESTION_OPTION_TYPE_AUDIO       QuestionOptionType = 3 // 音频类型
)

// Enum value maps for QuestionOptionType.
var (
	QuestionOptionType_name = map[int32]string{
		0: "QUESTION_OPTION_TYPE_UNSPECIFIED",
		1: "QUESTION_OPTION_TYPE_TEXT",
		2: "QUESTION_OPTION_TYPE_IMAGE",
		3: "QUESTION_OPTION_TYPE_AUDIO",
	}
	QuestionOptionType_value = map[string]int32{
		"QUESTION_OPTION_TYPE_UNSPECIFIED": 0,
		"QUESTION_OPTION_TYPE_TEXT":        1,
		"QUESTION_OPTION_TYPE_IMAGE":       2,
		"QUESTION_OPTION_TYPE_AUDIO":       3,
	}
)

func (x QuestionOptionType) Enum() *QuestionOptionType {
	p := new(QuestionOptionType)
	*p = x
	return p
}

func (x QuestionOptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionOptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_question_proto_enumTypes[1].Descriptor()
}

func (QuestionOptionType) Type() protoreflect.EnumType {
	return &file_proto_v1_question_proto_enumTypes[1]
}

func (x QuestionOptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionOptionType.Descriptor instead.
func (QuestionOptionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{1}
}

// QuestionDifficultyLevel 难度等级
type QuestionDifficultyLevel int32

const (
	// 未指定难度，用于处理未知的新难度级别，客户端应该显示为"未知难度"
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_UNSPECIFIED QuestionDifficultyLevel = 0
	// CEFR 等级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_CEFR_A1 QuestionDifficultyLevel = 1 // 入门级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_CEFR_A2 QuestionDifficultyLevel = 2 // 基础级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_CEFR_B1 QuestionDifficultyLevel = 3 // 进阶级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_CEFR_B2 QuestionDifficultyLevel = 4 // 高阶级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_CEFR_C1 QuestionDifficultyLevel = 5 // 熟练级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_CEFR_C2 QuestionDifficultyLevel = 6 // 精通级
	// HSK 等级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_HSK_1 QuestionDifficultyLevel = 7  // 入门级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_HSK_2 QuestionDifficultyLevel = 8  // 基础级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_HSK_3 QuestionDifficultyLevel = 9  // 进阶级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_HSK_4 QuestionDifficultyLevel = 10 // 中高级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_HSK_5 QuestionDifficultyLevel = 11 // 高级
	QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_HSK_6 QuestionDifficultyLevel = 12 // 精通级
)

// Enum value maps for QuestionDifficultyLevel.
var (
	QuestionDifficultyLevel_name = map[int32]string{
		0:  "QUESTION_DIFFICULTY_LEVEL_UNSPECIFIED",
		1:  "QUESTION_DIFFICULTY_LEVEL_CEFR_A1",
		2:  "QUESTION_DIFFICULTY_LEVEL_CEFR_A2",
		3:  "QUESTION_DIFFICULTY_LEVEL_CEFR_B1",
		4:  "QUESTION_DIFFICULTY_LEVEL_CEFR_B2",
		5:  "QUESTION_DIFFICULTY_LEVEL_CEFR_C1",
		6:  "QUESTION_DIFFICULTY_LEVEL_CEFR_C2",
		7:  "QUESTION_DIFFICULTY_LEVEL_HSK_1",
		8:  "QUESTION_DIFFICULTY_LEVEL_HSK_2",
		9:  "QUESTION_DIFFICULTY_LEVEL_HSK_3",
		10: "QUESTION_DIFFICULTY_LEVEL_HSK_4",
		11: "QUESTION_DIFFICULTY_LEVEL_HSK_5",
		12: "QUESTION_DIFFICULTY_LEVEL_HSK_6",
	}
	QuestionDifficultyLevel_value = map[string]int32{
		"QUESTION_DIFFICULTY_LEVEL_UNSPECIFIED": 0,
		"QUESTION_DIFFICULTY_LEVEL_CEFR_A1":     1,
		"QUESTION_DIFFICULTY_LEVEL_CEFR_A2":     2,
		"QUESTION_DIFFICULTY_LEVEL_CEFR_B1":     3,
		"QUESTION_DIFFICULTY_LEVEL_CEFR_B2":     4,
		"QUESTION_DIFFICULTY_LEVEL_CEFR_C1":     5,
		"QUESTION_DIFFICULTY_LEVEL_CEFR_C2":     6,
		"QUESTION_DIFFICULTY_LEVEL_HSK_1":       7,
		"QUESTION_DIFFICULTY_LEVEL_HSK_2":       8,
		"QUESTION_DIFFICULTY_LEVEL_HSK_3":       9,
		"QUESTION_DIFFICULTY_LEVEL_HSK_4":       10,
		"QUESTION_DIFFICULTY_LEVEL_HSK_5":       11,
		"QUESTION_DIFFICULTY_LEVEL_HSK_6":       12,
	}
)

func (x QuestionDifficultyLevel) Enum() *QuestionDifficultyLevel {
	p := new(QuestionDifficultyLevel)
	*p = x
	return p
}

func (x QuestionDifficultyLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionDifficultyLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_question_proto_enumTypes[2].Descriptor()
}

func (QuestionDifficultyLevel) Type() protoreflect.EnumType {
	return &file_proto_v1_question_proto_enumTypes[2]
}

func (x QuestionDifficultyLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionDifficultyLevel.Descriptor instead.
func (QuestionDifficultyLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{2}
}

type QuestionStatus int32

const (
	// 未指定状态，用于处理未知的新状态，客户端应该显示为"未知状态"
	QuestionStatus_QUESTION_STATUS_UNSPECIFIED QuestionStatus = 0
	QuestionStatus_QUESTION_STATUS_DRAFT       QuestionStatus = 1
	QuestionStatus_QUESTION_STATUS_REVIEWING   QuestionStatus = 2
	QuestionStatus_QUESTION_STATUS_PUBLISHED   QuestionStatus = 3
)

// Enum value maps for QuestionStatus.
var (
	QuestionStatus_name = map[int32]string{
		0: "QUESTION_STATUS_UNSPECIFIED",
		1: "QUESTION_STATUS_DRAFT",
		2: "QUESTION_STATUS_REVIEWING",
		3: "QUESTION_STATUS_PUBLISHED",
	}
	QuestionStatus_value = map[string]int32{
		"QUESTION_STATUS_UNSPECIFIED": 0,
		"QUESTION_STATUS_DRAFT":       1,
		"QUESTION_STATUS_REVIEWING":   2,
		"QUESTION_STATUS_PUBLISHED":   3,
	}
)

func (x QuestionStatus) Enum() *QuestionStatus {
	p := new(QuestionStatus)
	*p = x
	return p
}

func (x QuestionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_question_proto_enumTypes[3].Descriptor()
}

func (QuestionStatus) Type() protoreflect.EnumType {
	return &file_proto_v1_question_proto_enumTypes[3]
}

func (x QuestionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionStatus.Descriptor instead.
func (QuestionStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{3}
}

type QuestionCategory int32

const (
	// 未指定分类，用于处理未知的新分类，客户端应该显示为"未知分类"
	QuestionCategory_QUESTION_CATEGORY_UNSPECIFIED QuestionCategory = 0
	QuestionCategory_QUESTION_CATEGORY_EXERCISE    QuestionCategory = 1
	QuestionCategory_QUESTION_CATEGORY_TEST        QuestionCategory = 2
	QuestionCategory_QUESTION_CATEGORY_GRAMMAR     QuestionCategory = 3
)

// Enum value maps for QuestionCategory.
var (
	QuestionCategory_name = map[int32]string{
		0: "QUESTION_CATEGORY_UNSPECIFIED",
		1: "QUESTION_CATEGORY_EXERCISE",
		2: "QUESTION_CATEGORY_TEST",
		3: "QUESTION_CATEGORY_GRAMMAR",
	}
	QuestionCategory_value = map[string]int32{
		"QUESTION_CATEGORY_UNSPECIFIED": 0,
		"QUESTION_CATEGORY_EXERCISE":    1,
		"QUESTION_CATEGORY_TEST":        2,
		"QUESTION_CATEGORY_GRAMMAR":     3,
	}
)

func (x QuestionCategory) Enum() *QuestionCategory {
	p := new(QuestionCategory)
	*p = x
	return p
}

func (x QuestionCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_question_proto_enumTypes[4].Descriptor()
}

func (QuestionCategory) Type() protoreflect.EnumType {
	return &file_proto_v1_question_proto_enumTypes[4]
}

func (x QuestionCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionCategory.Descriptor instead.
func (QuestionCategory) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{4}
}

type QuestionType int32

const (
	// 未指定类型，用于处理未知的新题型，客户端应该显示为"未知题型"
	QuestionType_QUESTION_TYPE_UNSPECIFIED           QuestionType = 0
	QuestionType_QUESTION_TYPE_LISTEN_AND_SELECT     QuestionType = 1  // 听力选择题：听音频选择正确选项
	QuestionType_QUESTION_TYPE_MULTIPLE_CHOICE       QuestionType = 2  // 多项选择题：从多个选项中选择正确答案
	QuestionType_QUESTION_TYPE_FILL_IN_BLANK         QuestionType = 3  // 填空题：在句子或段落中填写适当的词语
	QuestionType_QUESTION_TYPE_TRANSLATION           QuestionType = 4  // 翻译题：将一种语言翻译成另一种语言
	QuestionType_QUESTION_TYPE_MATCHING              QuestionType = 5  // 匹配题：将相关的项目配对
	QuestionType_QUESTION_TYPE_ORDERING              QuestionType = 6  // 排序题：句子或段落按正确顺序排列
	QuestionType_QUESTION_TYPE_READING_COMPREHENSION QuestionType = 7  // 阅读理解：阅读文章回答问题
	QuestionType_QUESTION_TYPE_SPEAKING_TEST         QuestionType = 8  // 口语测试：录音回答问题
	QuestionType_QUESTION_TYPE_WRITING_TEST          QuestionType = 9  // 写作测试：写作文或短文
	QuestionType_QUESTION_TYPE_DICTATION             QuestionType = 10 // 听写题：听音频写出内容
	QuestionType_QUESTION_TYPE_PICTURE_DESCRIPTION   QuestionType = 11 // 看图说话：描述图片内容
	QuestionType_QUESTION_TYPE_CLOZE                 QuestionType = 12 // 完形填空：选择合适的词填空
	QuestionType_QUESTION_TYPE_ESSAY                 QuestionType = 13 // 问答题：回答问题
	QuestionType_QUESTION_TYPE_SINGLE_CHOICE         QuestionType = 14 // 单选题：从多个选项中选择正确答案
	QuestionType_QUESTION_TYPE_TRUE_FALSE            QuestionType = 15 // 判断题：判断对错
)

// Enum value maps for QuestionType.
var (
	QuestionType_name = map[int32]string{
		0:  "QUESTION_TYPE_UNSPECIFIED",
		1:  "QUESTION_TYPE_LISTEN_AND_SELECT",
		2:  "QUESTION_TYPE_MULTIPLE_CHOICE",
		3:  "QUESTION_TYPE_FILL_IN_BLANK",
		4:  "QUESTION_TYPE_TRANSLATION",
		5:  "QUESTION_TYPE_MATCHING",
		6:  "QUESTION_TYPE_ORDERING",
		7:  "QUESTION_TYPE_READING_COMPREHENSION",
		8:  "QUESTION_TYPE_SPEAKING_TEST",
		9:  "QUESTION_TYPE_WRITING_TEST",
		10: "QUESTION_TYPE_DICTATION",
		11: "QUESTION_TYPE_PICTURE_DESCRIPTION",
		12: "QUESTION_TYPE_CLOZE",
		13: "QUESTION_TYPE_ESSAY",
		14: "QUESTION_TYPE_SINGLE_CHOICE",
		15: "QUESTION_TYPE_TRUE_FALSE",
	}
	QuestionType_value = map[string]int32{
		"QUESTION_TYPE_UNSPECIFIED":           0,
		"QUESTION_TYPE_LISTEN_AND_SELECT":     1,
		"QUESTION_TYPE_MULTIPLE_CHOICE":       2,
		"QUESTION_TYPE_FILL_IN_BLANK":         3,
		"QUESTION_TYPE_TRANSLATION":           4,
		"QUESTION_TYPE_MATCHING":              5,
		"QUESTION_TYPE_ORDERING":              6,
		"QUESTION_TYPE_READING_COMPREHENSION": 7,
		"QUESTION_TYPE_SPEAKING_TEST":         8,
		"QUESTION_TYPE_WRITING_TEST":          9,
		"QUESTION_TYPE_DICTATION":             10,
		"QUESTION_TYPE_PICTURE_DESCRIPTION":   11,
		"QUESTION_TYPE_CLOZE":                 12,
		"QUESTION_TYPE_ESSAY":                 13,
		"QUESTION_TYPE_SINGLE_CHOICE":         14,
		"QUESTION_TYPE_TRUE_FALSE":            15,
	}
)

func (x QuestionType) Enum() *QuestionType {
	p := new(QuestionType)
	*p = x
	return p
}

func (x QuestionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_question_proto_enumTypes[5].Descriptor()
}

func (QuestionType) Type() protoreflect.EnumType {
	return &file_proto_v1_question_proto_enumTypes[5]
}

func (x QuestionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionType.Descriptor instead.
func (QuestionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{5}
}

type QuestionSubType int32

const (
	// 未指定类型，用于处理未知的新子题型，客户端应该显示为"未知子题型"
	QuestionSubType_QUESTION_SUB_TYPE_UNSPECIFIED   QuestionSubType = 0
	QuestionSubType_QUESTION_SUB_TYPE_SINGLE_CHOICE QuestionSubType = 1 // 单选题
)

// Enum value maps for QuestionSubType.
var (
	QuestionSubType_name = map[int32]string{
		0: "QUESTION_SUB_TYPE_UNSPECIFIED",
		1: "QUESTION_SUB_TYPE_SINGLE_CHOICE",
	}
	QuestionSubType_value = map[string]int32{
		"QUESTION_SUB_TYPE_UNSPECIFIED":   0,
		"QUESTION_SUB_TYPE_SINGLE_CHOICE": 1,
	}
)

func (x QuestionSubType) Enum() *QuestionSubType {
	p := new(QuestionSubType)
	*p = x
	return p
}

func (x QuestionSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_question_proto_enumTypes[6].Descriptor()
}

func (QuestionSubType) Type() protoreflect.EnumType {
	return &file_proto_v1_question_proto_enumTypes[6]
}

func (x QuestionSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionSubType.Descriptor instead.
func (QuestionSubType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{6}
}

// SubQuestionType 子问题类型
type SubQuestionType int32

const (
	SubQuestionType_SUB_QUESTION_TYPE_UNSPECIFIED   SubQuestionType = 0 // 未指定
	SubQuestionType_SUB_QUESTION_TYPE_SINGLE_CHOICE SubQuestionType = 1 // 单选题
)

// Enum value maps for SubQuestionType.
var (
	SubQuestionType_name = map[int32]string{
		0: "SUB_QUESTION_TYPE_UNSPECIFIED",
		1: "SUB_QUESTION_TYPE_SINGLE_CHOICE",
	}
	SubQuestionType_value = map[string]int32{
		"SUB_QUESTION_TYPE_UNSPECIFIED":   0,
		"SUB_QUESTION_TYPE_SINGLE_CHOICE": 1,
	}
)

func (x SubQuestionType) Enum() *SubQuestionType {
	p := new(SubQuestionType)
	*p = x
	return p
}

func (x SubQuestionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubQuestionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_question_proto_enumTypes[7].Descriptor()
}

func (SubQuestionType) Type() protoreflect.EnumType {
	return &file_proto_v1_question_proto_enumTypes[7]
}

func (x SubQuestionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubQuestionType.Descriptor instead.
func (SubQuestionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{7}
}

type QuestionHyperTextTagType int32

const (
	// 未指定类型，用于处理未知的新类型，客户端应该拒绝处理该类型的内容
	QuestionHyperTextTagType_QUESTION_HYPER_TEXT_TAG_TYPE_UNSPECIFIED QuestionHyperTextTagType = 0
	QuestionHyperTextTagType_QUESTION_HYPER_TEXT_TAG_TYPE_TEXT        QuestionHyperTextTagType = 1 // 文本
	QuestionHyperTextTagType_QUESTION_HYPER_TEXT_TAG_TYPE_IMAGE       QuestionHyperTextTagType = 2 // 图片
	QuestionHyperTextTagType_QUESTION_HYPER_TEXT_TAG_TYPE_AUDIO       QuestionHyperTextTagType = 3 // 音频
	QuestionHyperTextTagType_QUESTION_HYPER_TEXT_TAG_TYPE_URL         QuestionHyperTextTagType = 4 // 链接
	QuestionHyperTextTagType_QUESTION_HYPER_TEXT_TAG_TYPE_ANIMATION   QuestionHyperTextTagType = 5 // 动画
	QuestionHyperTextTagType_QUESTION_HYPER_TEXT_TAG_TYPE_V_STACK     QuestionHyperTextTagType = 6 // 垂直布局容器
	QuestionHyperTextTagType_QUESTION_HYPER_TEXT_TAG_TYPE_H_STACK     QuestionHyperTextTagType = 7 // 水平布局容器
)

// Enum value maps for QuestionHyperTextTagType.
var (
	QuestionHyperTextTagType_name = map[int32]string{
		0: "QUESTION_HYPER_TEXT_TAG_TYPE_UNSPECIFIED",
		1: "QUESTION_HYPER_TEXT_TAG_TYPE_TEXT",
		2: "QUESTION_HYPER_TEXT_TAG_TYPE_IMAGE",
		3: "QUESTION_HYPER_TEXT_TAG_TYPE_AUDIO",
		4: "QUESTION_HYPER_TEXT_TAG_TYPE_URL",
		5: "QUESTION_HYPER_TEXT_TAG_TYPE_ANIMATION",
		6: "QUESTION_HYPER_TEXT_TAG_TYPE_V_STACK",
		7: "QUESTION_HYPER_TEXT_TAG_TYPE_H_STACK",
	}
	QuestionHyperTextTagType_value = map[string]int32{
		"QUESTION_HYPER_TEXT_TAG_TYPE_UNSPECIFIED": 0,
		"QUESTION_HYPER_TEXT_TAG_TYPE_TEXT":        1,
		"QUESTION_HYPER_TEXT_TAG_TYPE_IMAGE":       2,
		"QUESTION_HYPER_TEXT_TAG_TYPE_AUDIO":       3,
		"QUESTION_HYPER_TEXT_TAG_TYPE_URL":         4,
		"QUESTION_HYPER_TEXT_TAG_TYPE_ANIMATION":   5,
		"QUESTION_HYPER_TEXT_TAG_TYPE_V_STACK":     6,
		"QUESTION_HYPER_TEXT_TAG_TYPE_H_STACK":     7,
	}
)

func (x QuestionHyperTextTagType) Enum() *QuestionHyperTextTagType {
	p := new(QuestionHyperTextTagType)
	*p = x
	return p
}

func (x QuestionHyperTextTagType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionHyperTextTagType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_question_proto_enumTypes[8].Descriptor()
}

func (QuestionHyperTextTagType) Type() protoreflect.EnumType {
	return &file_proto_v1_question_proto_enumTypes[8]
}

func (x QuestionHyperTextTagType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionHyperTextTagType.Descriptor instead.
func (QuestionHyperTextTagType) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{8}
}

// HyperTextTag 定义超文本标签结构
type HyperTextTag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          HyperTextTagType       `protobuf:"varint,1,opt,name=type,proto3,enum=proto.v1.HyperTextTagType" json:"type,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Children      []*HyperTextTag        `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HyperTextTag) Reset() {
	*x = HyperTextTag{}
	mi := &file_proto_v1_question_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HyperTextTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperTextTag) ProtoMessage() {}

func (x *HyperTextTag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperTextTag.ProtoReflect.Descriptor instead.
func (*HyperTextTag) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{0}
}

func (x *HyperTextTag) GetType() HyperTextTagType {
	if x != nil {
		return x.Type
	}
	return HyperTextTagType_HYPER_TEXT_TAG_TYPE_UNSPECIFIED
}

func (x *HyperTextTag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *HyperTextTag) GetChildren() []*HyperTextTag {
	if x != nil {
		return x.Children
	}
	return nil
}

// Size 定义尺寸结构
type Size struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         uint32                 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Size) Reset() {
	*x = Size{}
	mi := &file_proto_v1_question_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Size.ProtoReflect.Descriptor instead.
func (*Size) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{1}
}

func (x *Size) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Size) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

// QuestionChatSenderAvatar 定义发送者头像结构
type QuestionChatSenderAvatar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Size          *Size                  `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionChatSenderAvatar) Reset() {
	*x = QuestionChatSenderAvatar{}
	mi := &file_proto_v1_question_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionChatSenderAvatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionChatSenderAvatar) ProtoMessage() {}

func (x *QuestionChatSenderAvatar) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionChatSenderAvatar.ProtoReflect.Descriptor instead.
func (*QuestionChatSenderAvatar) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{2}
}

func (x *QuestionChatSenderAvatar) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuestionChatSenderAvatar) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *QuestionChatSenderAvatar) GetSize() *Size {
	if x != nil {
		return x.Size
	}
	return nil
}

// QuestionChatSender 定义发送者结构
type QuestionChatSender struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Name          string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        *QuestionChatSenderAvatar `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionChatSender) Reset() {
	*x = QuestionChatSender{}
	mi := &file_proto_v1_question_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionChatSender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionChatSender) ProtoMessage() {}

func (x *QuestionChatSender) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionChatSender.ProtoReflect.Descriptor instead.
func (*QuestionChatSender) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{3}
}

func (x *QuestionChatSender) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuestionChatSender) GetAvatar() *QuestionChatSenderAvatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

// QuestionChatMessage 定义聊天消息结构
type QuestionChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sender        *QuestionChatSender    `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Content       *HyperTextTag          `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionChatMessage) Reset() {
	*x = QuestionChatMessage{}
	mi := &file_proto_v1_question_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionChatMessage) ProtoMessage() {}

func (x *QuestionChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionChatMessage.ProtoReflect.Descriptor instead.
func (*QuestionChatMessage) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{4}
}

func (x *QuestionChatMessage) GetSender() *QuestionChatSender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *QuestionChatMessage) GetContent() *HyperTextTag {
	if x != nil {
		return x.Content
	}
	return nil
}

// QuestionOption 题目选项
type QuestionOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          QuestionOptionType     `protobuf:"varint,1,opt,name=type,proto3,enum=proto.v1.QuestionOptionType" json:"type,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionOption) Reset() {
	*x = QuestionOption{}
	mi := &file_proto_v1_question_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionOption) ProtoMessage() {}

func (x *QuestionOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionOption.ProtoReflect.Descriptor instead.
func (*QuestionOption) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{5}
}

func (x *QuestionOption) GetType() QuestionOptionType {
	if x != nil {
		return x.Type
	}
	return QuestionOptionType_QUESTION_OPTION_TYPE_UNSPECIFIED
}

func (x *QuestionOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// QuestionOptionTuple 题目选项双元组, 用于匹配题, 排序题等, 一个源选项, 一个答案选项, 客户端需要打乱顺序, 由用户完成匹配
type QuestionOptionTuple struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Option1       *QuestionOption        `protobuf:"bytes,1,opt,name=option1,proto3" json:"option1,omitempty"`
	Option2       *QuestionOption        `protobuf:"bytes,2,opt,name=option2,proto3" json:"option2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionOptionTuple) Reset() {
	*x = QuestionOptionTuple{}
	mi := &file_proto_v1_question_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionOptionTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionOptionTuple) ProtoMessage() {}

func (x *QuestionOptionTuple) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionOptionTuple.ProtoReflect.Descriptor instead.
func (*QuestionOptionTuple) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{6}
}

func (x *QuestionOptionTuple) GetOption1() *QuestionOption {
	if x != nil {
		return x.Option1
	}
	return nil
}

func (x *QuestionOptionTuple) GetOption2() *QuestionOption {
	if x != nil {
		return x.Option2
	}
	return nil
}

// Tag 标签
type Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Weight        uint32                 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tag) Reset() {
	*x = Tag{}
	mi := &file_proto_v1_question_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{7}
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

// SubQuestion 子问题
type SubQuestion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Q             string                 `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`                                                                          // 问题内容
	QuestionType  SubQuestionType        `protobuf:"varint,2,opt,name=question_type,json=questionType,proto3,enum=proto.v1.SubQuestionType" json:"question_type,omitempty"` // 问题类型
	Options       []*QuestionOption      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`                                                              // 选项列表
	Answers       []string               `protobuf:"bytes,4,rep,name=answers,proto3" json:"answers,omitempty"`                                                              // 答案列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubQuestion) Reset() {
	*x = SubQuestion{}
	mi := &file_proto_v1_question_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubQuestion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubQuestion) ProtoMessage() {}

func (x *SubQuestion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubQuestion.ProtoReflect.Descriptor instead.
func (*SubQuestion) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{8}
}

func (x *SubQuestion) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SubQuestion) GetQuestionType() SubQuestionType {
	if x != nil {
		return x.QuestionType
	}
	return SubQuestionType_SUB_QUESTION_TYPE_UNSPECIFIED
}

func (x *SubQuestion) GetOptions() []*QuestionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *SubQuestion) GetAnswers() []string {
	if x != nil {
		return x.Answers
	}
	return nil
}

// Question 题目
type Question struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	Id             uint64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                    // 题目ID
	Title          string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                               // 题目标题
	QuestionType   QuestionType            `protobuf:"varint,3,opt,name=question_type,json=questionType,proto3,enum=proto.v1.QuestionType" json:"question_type,omitempty"` // 题目类型
	Content        *HyperTextTag           `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                                           // 题目内容
	SimpleQuestion string                  `protobuf:"bytes,5,opt,name=simple_question,json=simpleQuestion,proto3" json:"simple_question,omitempty"`                       // 题目内容
	SubQuestions   []*SubQuestion          `protobuf:"bytes,6,rep,name=sub_questions,json=subQuestions,proto3" json:"sub_questions,omitempty"`                             // 子问题
	Options        []*QuestionOption       `protobuf:"bytes,7,rep,name=options,proto3" json:"options,omitempty"`                                                           // 选项列表
	OptionTuples   []*QuestionOptionTuple  `protobuf:"bytes,8,rep,name=option_tuples,json=optionTuples,proto3" json:"option_tuples,omitempty"`                             // 选项双元组列表
	Answers        []string                `protobuf:"bytes,9,rep,name=answers,proto3" json:"answers,omitempty"`                                                           // 答案列表
	Difficulty     QuestionDifficultyLevel `protobuf:"varint,10,opt,name=difficulty,proto3,enum=proto.v1.QuestionDifficultyLevel" json:"difficulty,omitempty"`             // 难度等级
	Status         QuestionStatus          `protobuf:"varint,11,opt,name=status,proto3,enum=proto.v1.QuestionStatus" json:"status,omitempty"`                              // 题目状态
	Category       QuestionCategory        `protobuf:"varint,12,opt,name=category,proto3,enum=proto.v1.QuestionCategory" json:"category,omitempty"`                        // 题目分类
	Labels         []string                `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels,omitempty"`                                                            // 标签列表, 通过标签在题库匹配题目
	Explanation    string                  `protobuf:"bytes,14,opt,name=explanation,proto3" json:"explanation,omitempty"`                                                  // 题目解析
	Attachments    []string                `protobuf:"bytes,15,rep,name=attachments,proto3" json:"attachments,omitempty"`                                                  // 附件列表
	CorrectRate    float64                 `protobuf:"fixed64,16,opt,name=correct_rate,json=correctRate,proto3" json:"correct_rate,omitempty"`                             // 正确率
	CreatedAt      uint64                  `protobuf:"varint,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                    // 创建时间
	UpdatedAt      uint64                  `protobuf:"varint,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                    // 更新时间
	TimeLimit      uint32                  `protobuf:"varint,19,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`                                    // 时间限制, 单位秒
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Question) Reset() {
	*x = Question{}
	mi := &file_proto_v1_question_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{9}
}

func (x *Question) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Question) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Question) GetQuestionType() QuestionType {
	if x != nil {
		return x.QuestionType
	}
	return QuestionType_QUESTION_TYPE_UNSPECIFIED
}

func (x *Question) GetContent() *HyperTextTag {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Question) GetSimpleQuestion() string {
	if x != nil {
		return x.SimpleQuestion
	}
	return ""
}

func (x *Question) GetSubQuestions() []*SubQuestion {
	if x != nil {
		return x.SubQuestions
	}
	return nil
}

func (x *Question) GetOptions() []*QuestionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Question) GetOptionTuples() []*QuestionOptionTuple {
	if x != nil {
		return x.OptionTuples
	}
	return nil
}

func (x *Question) GetAnswers() []string {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *Question) GetDifficulty() QuestionDifficultyLevel {
	if x != nil {
		return x.Difficulty
	}
	return QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_UNSPECIFIED
}

func (x *Question) GetStatus() QuestionStatus {
	if x != nil {
		return x.Status
	}
	return QuestionStatus_QUESTION_STATUS_UNSPECIFIED
}

func (x *Question) GetCategory() QuestionCategory {
	if x != nil {
		return x.Category
	}
	return QuestionCategory_QUESTION_CATEGORY_UNSPECIFIED
}

func (x *Question) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Question) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

func (x *Question) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Question) GetCorrectRate() float64 {
	if x != nil {
		return x.CorrectRate
	}
	return 0
}

func (x *Question) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Question) GetUpdatedAt() uint64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Question) GetTimeLimit() uint32 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

type QuestionHyperTextTag struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Type          QuestionHyperTextTagType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.v1.QuestionHyperTextTagType" json:"type,omitempty"`
	Value         string                   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Children      []*QuestionHyperTextTag  `protobuf:"bytes,3,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionHyperTextTag) Reset() {
	*x = QuestionHyperTextTag{}
	mi := &file_proto_v1_question_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionHyperTextTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionHyperTextTag) ProtoMessage() {}

func (x *QuestionHyperTextTag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionHyperTextTag.ProtoReflect.Descriptor instead.
func (*QuestionHyperTextTag) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{10}
}

func (x *QuestionHyperTextTag) GetType() QuestionHyperTextTagType {
	if x != nil {
		return x.Type
	}
	return QuestionHyperTextTagType_QUESTION_HYPER_TEXT_TAG_TYPE_UNSPECIFIED
}

func (x *QuestionHyperTextTag) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *QuestionHyperTextTag) GetChildren() []*QuestionHyperTextTag {
	if x != nil {
		return x.Children
	}
	return nil
}

type QuestionSize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         uint32                 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionSize) Reset() {
	*x = QuestionSize{}
	mi := &file_proto_v1_question_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionSize) ProtoMessage() {}

func (x *QuestionSize) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionSize.ProtoReflect.Descriptor instead.
func (*QuestionSize) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{11}
}

func (x *QuestionSize) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *QuestionSize) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type QuestionTag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Weight        uint32                 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionTag) Reset() {
	*x = QuestionTag{}
	mi := &file_proto_v1_question_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionTag) ProtoMessage() {}

func (x *QuestionTag) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionTag.ProtoReflect.Descriptor instead.
func (*QuestionTag) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{12}
}

func (x *QuestionTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuestionTag) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

// QuestionServiceGetRequest 获取题目请求
type QuestionServiceGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []uint64               `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` // 题目ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServiceGetRequest) Reset() {
	*x = QuestionServiceGetRequest{}
	mi := &file_proto_v1_question_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceGetRequest) ProtoMessage() {}

func (x *QuestionServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceGetRequest.ProtoReflect.Descriptor instead.
func (*QuestionServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{13}
}

func (x *QuestionServiceGetRequest) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// QuestionServiceGetResponse 获取题目响应
type QuestionServiceGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Questions     []*Question            `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"` // 题目列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServiceGetResponse) Reset() {
	*x = QuestionServiceGetResponse{}
	mi := &file_proto_v1_question_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceGetResponse) ProtoMessage() {}

func (x *QuestionServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceGetResponse.ProtoReflect.Descriptor instead.
func (*QuestionServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{14}
}

func (x *QuestionServiceGetResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

// QuestionServiceCreateRequest 创建题目请求
type QuestionServiceCreateRequest struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	Title          string                  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                                               // 题目标题
	QuestionType   QuestionType            `protobuf:"varint,2,opt,name=question_type,json=questionType,proto3,enum=proto.v1.QuestionType" json:"question_type,omitempty"` // 题目类型
	Content        *HyperTextTag           `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                                                           // 题目内容
	SimpleQuestion string                  `protobuf:"bytes,4,opt,name=simple_question,json=simpleQuestion,proto3" json:"simple_question,omitempty"`                       // 题目内容
	SubQuestions   []*SubQuestion          `protobuf:"bytes,5,rep,name=sub_questions,json=subQuestions,proto3" json:"sub_questions,omitempty"`                             // 子问题
	Options        []*QuestionOption       `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`                                                           // 选项列表
	OptionTuples   []*QuestionOptionTuple  `protobuf:"bytes,7,rep,name=option_tuples,json=optionTuples,proto3" json:"option_tuples,omitempty"`                             // 选项双元组列表
	Answers        []string                `protobuf:"bytes,8,rep,name=answers,proto3" json:"answers,omitempty"`                                                           // 答案列表
	Difficulty     QuestionDifficultyLevel `protobuf:"varint,9,opt,name=difficulty,proto3,enum=proto.v1.QuestionDifficultyLevel" json:"difficulty,omitempty"`              // 难度等级
	Status         QuestionStatus          `protobuf:"varint,10,opt,name=status,proto3,enum=proto.v1.QuestionStatus" json:"status,omitempty"`                              // 题目状态
	Category       QuestionCategory        `protobuf:"varint,11,opt,name=category,proto3,enum=proto.v1.QuestionCategory" json:"category,omitempty"`                        // 题目分类
	Labels         []string                `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty"`                                                            // 标签列表, 通过标签在题库匹配题目
	Explanation    string                  `protobuf:"bytes,13,opt,name=explanation,proto3" json:"explanation,omitempty"`                                                  // 题目解析
	Attachments    []string                `protobuf:"bytes,14,rep,name=attachments,proto3" json:"attachments,omitempty"`                                                  // 附件列表
	TimeLimit      uint32                  `protobuf:"varint,15,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`                                    // 时间限制, 单位秒
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QuestionServiceCreateRequest) Reset() {
	*x = QuestionServiceCreateRequest{}
	mi := &file_proto_v1_question_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceCreateRequest) ProtoMessage() {}

func (x *QuestionServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*QuestionServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{15}
}

func (x *QuestionServiceCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionServiceCreateRequest) GetQuestionType() QuestionType {
	if x != nil {
		return x.QuestionType
	}
	return QuestionType_QUESTION_TYPE_UNSPECIFIED
}

func (x *QuestionServiceCreateRequest) GetContent() *HyperTextTag {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *QuestionServiceCreateRequest) GetSimpleQuestion() string {
	if x != nil {
		return x.SimpleQuestion
	}
	return ""
}

func (x *QuestionServiceCreateRequest) GetSubQuestions() []*SubQuestion {
	if x != nil {
		return x.SubQuestions
	}
	return nil
}

func (x *QuestionServiceCreateRequest) GetOptions() []*QuestionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *QuestionServiceCreateRequest) GetOptionTuples() []*QuestionOptionTuple {
	if x != nil {
		return x.OptionTuples
	}
	return nil
}

func (x *QuestionServiceCreateRequest) GetAnswers() []string {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *QuestionServiceCreateRequest) GetDifficulty() QuestionDifficultyLevel {
	if x != nil {
		return x.Difficulty
	}
	return QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_UNSPECIFIED
}

func (x *QuestionServiceCreateRequest) GetStatus() QuestionStatus {
	if x != nil {
		return x.Status
	}
	return QuestionStatus_QUESTION_STATUS_UNSPECIFIED
}

func (x *QuestionServiceCreateRequest) GetCategory() QuestionCategory {
	if x != nil {
		return x.Category
	}
	return QuestionCategory_QUESTION_CATEGORY_UNSPECIFIED
}

func (x *QuestionServiceCreateRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *QuestionServiceCreateRequest) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

func (x *QuestionServiceCreateRequest) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *QuestionServiceCreateRequest) GetTimeLimit() uint32 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

// QuestionServiceCreateResponse 创建题目响应
type QuestionServiceCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 创建成功后返回题目ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServiceCreateResponse) Reset() {
	*x = QuestionServiceCreateResponse{}
	mi := &file_proto_v1_question_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceCreateResponse) ProtoMessage() {}

func (x *QuestionServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*QuestionServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{16}
}

func (x *QuestionServiceCreateResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// QuestionServiceSearchRequest 搜索题目请求
type QuestionServiceSearchRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Keyword       string                  `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`                                                           // 搜索关键词, 内容参考 domain 中的定义
	QuestionType  QuestionType            `protobuf:"varint,2,opt,name=question_type,json=questionType,proto3,enum=proto.v1.QuestionType" json:"question_type,omitempty"` // 题目类型
	Difficulty    QuestionDifficultyLevel `protobuf:"varint,3,opt,name=difficulty,proto3,enum=proto.v1.QuestionDifficultyLevel" json:"difficulty,omitempty"`              // 难度等级
	Category      QuestionCategory        `protobuf:"varint,4,opt,name=category,proto3,enum=proto.v1.QuestionCategory" json:"category,omitempty"`                         // 题目分类
	Page          uint32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`                                                                // 页码
	PageSize      uint32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                        // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServiceSearchRequest) Reset() {
	*x = QuestionServiceSearchRequest{}
	mi := &file_proto_v1_question_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceSearchRequest) ProtoMessage() {}

func (x *QuestionServiceSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceSearchRequest.ProtoReflect.Descriptor instead.
func (*QuestionServiceSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{17}
}

func (x *QuestionServiceSearchRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *QuestionServiceSearchRequest) GetQuestionType() QuestionType {
	if x != nil {
		return x.QuestionType
	}
	return QuestionType_QUESTION_TYPE_UNSPECIFIED
}

func (x *QuestionServiceSearchRequest) GetDifficulty() QuestionDifficultyLevel {
	if x != nil {
		return x.Difficulty
	}
	return QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_UNSPECIFIED
}

func (x *QuestionServiceSearchRequest) GetCategory() QuestionCategory {
	if x != nil {
		return x.Category
	}
	return QuestionCategory_QUESTION_CATEGORY_UNSPECIFIED
}

func (x *QuestionServiceSearchRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QuestionServiceSearchRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// QuestionServiceSearchResponse 搜索题目响应
type QuestionServiceSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Questions     []*Question            `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"` // 题目列表
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`        // 总数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServiceSearchResponse) Reset() {
	*x = QuestionServiceSearchResponse{}
	mi := &file_proto_v1_question_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceSearchResponse) ProtoMessage() {}

func (x *QuestionServiceSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceSearchResponse.ProtoReflect.Descriptor instead.
func (*QuestionServiceSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{18}
}

func (x *QuestionServiceSearchResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

func (x *QuestionServiceSearchResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// QuestionServiceUpdateRequest 更新题目请求
type QuestionServiceUpdateRequest struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	Id             uint64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                       // 题目ID
	Title          string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                  // 题目标题
	Content        *HyperTextTag           `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                                              // 题目内容
	SimpleQuestion string                  `protobuf:"bytes,4,opt,name=simple_question,json=simpleQuestion,proto3" json:"simple_question,omitempty"`          // 题目内容
	SubQuestions   []*SubQuestion          `protobuf:"bytes,5,rep,name=sub_questions,json=subQuestions,proto3" json:"sub_questions,omitempty"`                // 子问题
	Options        []*QuestionOption       `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`                                              // 选项列表
	OptionTuples   []*QuestionOptionTuple  `protobuf:"bytes,7,rep,name=option_tuples,json=optionTuples,proto3" json:"option_tuples,omitempty"`                // 选项双元组列表
	Answers        []string                `protobuf:"bytes,8,rep,name=answers,proto3" json:"answers,omitempty"`                                              // 答案列表
	Difficulty     QuestionDifficultyLevel `protobuf:"varint,9,opt,name=difficulty,proto3,enum=proto.v1.QuestionDifficultyLevel" json:"difficulty,omitempty"` // 难度等级
	Category       QuestionCategory        `protobuf:"varint,10,opt,name=category,proto3,enum=proto.v1.QuestionCategory" json:"category,omitempty"`           // 题目分类
	Labels         []string                `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty"`                                               // 标签列表, 通过标签在题库匹配题目
	Explanation    string                  `protobuf:"bytes,12,opt,name=explanation,proto3" json:"explanation,omitempty"`                                     // 题目解析
	Attachments    []string                `protobuf:"bytes,13,rep,name=attachments,proto3" json:"attachments,omitempty"`                                     // 附件列表
	TimeLimit      uint32                  `protobuf:"varint,14,opt,name=time_limit,json=timeLimit,proto3" json:"time_limit,omitempty"`                       // 时间限制, 单位秒
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QuestionServiceUpdateRequest) Reset() {
	*x = QuestionServiceUpdateRequest{}
	mi := &file_proto_v1_question_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceUpdateRequest) ProtoMessage() {}

func (x *QuestionServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*QuestionServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{19}
}

func (x *QuestionServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestionServiceUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionServiceUpdateRequest) GetContent() *HyperTextTag {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *QuestionServiceUpdateRequest) GetSimpleQuestion() string {
	if x != nil {
		return x.SimpleQuestion
	}
	return ""
}

func (x *QuestionServiceUpdateRequest) GetSubQuestions() []*SubQuestion {
	if x != nil {
		return x.SubQuestions
	}
	return nil
}

func (x *QuestionServiceUpdateRequest) GetOptions() []*QuestionOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *QuestionServiceUpdateRequest) GetOptionTuples() []*QuestionOptionTuple {
	if x != nil {
		return x.OptionTuples
	}
	return nil
}

func (x *QuestionServiceUpdateRequest) GetAnswers() []string {
	if x != nil {
		return x.Answers
	}
	return nil
}

func (x *QuestionServiceUpdateRequest) GetDifficulty() QuestionDifficultyLevel {
	if x != nil {
		return x.Difficulty
	}
	return QuestionDifficultyLevel_QUESTION_DIFFICULTY_LEVEL_UNSPECIFIED
}

func (x *QuestionServiceUpdateRequest) GetCategory() QuestionCategory {
	if x != nil {
		return x.Category
	}
	return QuestionCategory_QUESTION_CATEGORY_UNSPECIFIED
}

func (x *QuestionServiceUpdateRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *QuestionServiceUpdateRequest) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

func (x *QuestionServiceUpdateRequest) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *QuestionServiceUpdateRequest) GetTimeLimit() uint32 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

// QuestionServiceUpdateResponse 更新题目响应
type QuestionServiceUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServiceUpdateResponse) Reset() {
	*x = QuestionServiceUpdateResponse{}
	mi := &file_proto_v1_question_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceUpdateResponse) ProtoMessage() {}

func (x *QuestionServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*QuestionServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{20}
}

// QuestionServiceDeleteRequest 删除题目请求
type QuestionServiceDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 题目ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServiceDeleteRequest) Reset() {
	*x = QuestionServiceDeleteRequest{}
	mi := &file_proto_v1_question_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceDeleteRequest) ProtoMessage() {}

func (x *QuestionServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*QuestionServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{21}
}

func (x *QuestionServiceDeleteRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// QuestionServiceDeleteResponse 删除题目响应
type QuestionServiceDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServiceDeleteResponse) Reset() {
	*x = QuestionServiceDeleteResponse{}
	mi := &file_proto_v1_question_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServiceDeleteResponse) ProtoMessage() {}

func (x *QuestionServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*QuestionServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{22}
}

// QuestionServicePublishRequest 发布题目请求
type QuestionServicePublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                      // 题目ID
	Status        QuestionStatus         `protobuf:"varint,2,opt,name=status,proto3,enum=proto.v1.QuestionStatus" json:"status,omitempty"` // 题目状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServicePublishRequest) Reset() {
	*x = QuestionServicePublishRequest{}
	mi := &file_proto_v1_question_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServicePublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServicePublishRequest) ProtoMessage() {}

func (x *QuestionServicePublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServicePublishRequest.ProtoReflect.Descriptor instead.
func (*QuestionServicePublishRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{23}
}

func (x *QuestionServicePublishRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuestionServicePublishRequest) GetStatus() QuestionStatus {
	if x != nil {
		return x.Status
	}
	return QuestionStatus_QUESTION_STATUS_UNSPECIFIED
}

// QuestionServicePublishResponse 发布题目响应
type QuestionServicePublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionServicePublishResponse) Reset() {
	*x = QuestionServicePublishResponse{}
	mi := &file_proto_v1_question_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionServicePublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionServicePublishResponse) ProtoMessage() {}

func (x *QuestionServicePublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_question_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionServicePublishResponse.ProtoReflect.Descriptor instead.
func (*QuestionServicePublishResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_question_proto_rawDescGZIP(), []int{24}
}

var File_proto_v1_question_proto protoreflect.FileDescriptor

const file_proto_v1_question_proto_rawDesc = "" +
	"\n" +
	"\x17proto/v1/question.proto\x12\bproto.v1\x1a\x1cgoogle/api/annotations.proto\"\x88\x01\n" +
	"\fHyperTextTag\x12.\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1a.proto.v1.HyperTextTagTypeR\x04type\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x122\n" +
	"\bchildren\x18\x03 \x03(\v2\x16.proto.v1.HyperTextTagR\bchildren\"4\n" +
	"\x04Size\x12\x14\n" +
	"\x05width\x18\x01 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\rR\x06height\"d\n" +
	"\x18QuestionChatSenderAvatar\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\"\n" +
	"\x04size\x18\x03 \x01(\v2\x0e.proto.v1.SizeR\x04size\"d\n" +
	"\x12QuestionChatSender\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12:\n" +
	"\x06avatar\x18\x02 \x01(\v2\".proto.v1.QuestionChatSenderAvatarR\x06avatar\"}\n" +
	"\x13QuestionChatMessage\x124\n" +
	"\x06sender\x18\x01 \x01(\v2\x1c.proto.v1.QuestionChatSenderR\x06sender\x120\n" +
	"\acontent\x18\x02 \x01(\v2\x16.proto.v1.HyperTextTagR\acontent\"X\n" +
	"\x0eQuestionOption\x120\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1c.proto.v1.QuestionOptionTypeR\x04type\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"}\n" +
	"\x13QuestionOptionTuple\x122\n" +
	"\aoption1\x18\x01 \x01(\v2\x18.proto.v1.QuestionOptionR\aoption1\x122\n" +
	"\aoption2\x18\x02 \x01(\v2\x18.proto.v1.QuestionOptionR\aoption2\"1\n" +
	"\x03Tag\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06weight\x18\x02 \x01(\rR\x06weight\"\xa9\x01\n" +
	"\vSubQuestion\x12\f\n" +
	"\x01q\x18\x01 \x01(\tR\x01q\x12>\n" +
	"\rquestion_type\x18\x02 \x01(\x0e2\x19.proto.v1.SubQuestionTypeR\fquestionType\x122\n" +
	"\aoptions\x18\x03 \x03(\v2\x18.proto.v1.QuestionOptionR\aoptions\x12\x18\n" +
	"\aanswers\x18\x04 \x03(\tR\aanswers\"\x9f\x06\n" +
	"\bQuestion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12;\n" +
	"\rquestion_type\x18\x03 \x01(\x0e2\x16.proto.v1.QuestionTypeR\fquestionType\x120\n" +
	"\acontent\x18\x04 \x01(\v2\x16.proto.v1.HyperTextTagR\acontent\x12'\n" +
	"\x0fsimple_question\x18\x05 \x01(\tR\x0esimpleQuestion\x12:\n" +
	"\rsub_questions\x18\x06 \x03(\v2\x15.proto.v1.SubQuestionR\fsubQuestions\x122\n" +
	"\aoptions\x18\a \x03(\v2\x18.proto.v1.QuestionOptionR\aoptions\x12B\n" +
	"\roption_tuples\x18\b \x03(\v2\x1d.proto.v1.QuestionOptionTupleR\foptionTuples\x12\x18\n" +
	"\aanswers\x18\t \x03(\tR\aanswers\x12A\n" +
	"\n" +
	"difficulty\x18\n" +
	" \x01(\x0e2!.proto.v1.QuestionDifficultyLevelR\n" +
	"difficulty\x120\n" +
	"\x06status\x18\v \x01(\x0e2\x18.proto.v1.QuestionStatusR\x06status\x126\n" +
	"\bcategory\x18\f \x01(\x0e2\x1a.proto.v1.QuestionCategoryR\bcategory\x12\x16\n" +
	"\x06labels\x18\r \x03(\tR\x06labels\x12 \n" +
	"\vexplanation\x18\x0e \x01(\tR\vexplanation\x12 \n" +
	"\vattachments\x18\x0f \x03(\tR\vattachments\x12!\n" +
	"\fcorrect_rate\x18\x10 \x01(\x01R\vcorrectRate\x12\x1d\n" +
	"\n" +
	"created_at\x18\x11 \x01(\x04R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x12 \x01(\x04R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"time_limit\x18\x13 \x01(\rR\ttimeLimit\"\xa0\x01\n" +
	"\x14QuestionHyperTextTag\x126\n" +
	"\x04type\x18\x01 \x01(\x0e2\".proto.v1.QuestionHyperTextTagTypeR\x04type\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12:\n" +
	"\bchildren\x18\x03 \x03(\v2\x1e.proto.v1.QuestionHyperTextTagR\bchildren\"<\n" +
	"\fQuestionSize\x12\x14\n" +
	"\x05width\x18\x01 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\rR\x06height\"9\n" +
	"\vQuestionTag\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06weight\x18\x02 \x01(\rR\x06weight\"-\n" +
	"\x19QuestionServiceGetRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\x04R\x03ids\"N\n" +
	"\x1aQuestionServiceGetResponse\x120\n" +
	"\tquestions\x18\x01 \x03(\v2\x12.proto.v1.QuestionR\tquestions\"\xc2\x05\n" +
	"\x1cQuestionServiceCreateRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12;\n" +
	"\rquestion_type\x18\x02 \x01(\x0e2\x16.proto.v1.QuestionTypeR\fquestionType\x120\n" +
	"\acontent\x18\x03 \x01(\v2\x16.proto.v1.HyperTextTagR\acontent\x12'\n" +
	"\x0fsimple_question\x18\x04 \x01(\tR\x0esimpleQuestion\x12:\n" +
	"\rsub_questions\x18\x05 \x03(\v2\x15.proto.v1.SubQuestionR\fsubQuestions\x122\n" +
	"\aoptions\x18\x06 \x03(\v2\x18.proto.v1.QuestionOptionR\aoptions\x12B\n" +
	"\roption_tuples\x18\a \x03(\v2\x1d.proto.v1.QuestionOptionTupleR\foptionTuples\x12\x18\n" +
	"\aanswers\x18\b \x03(\tR\aanswers\x12A\n" +
	"\n" +
	"difficulty\x18\t \x01(\x0e2!.proto.v1.QuestionDifficultyLevelR\n" +
	"difficulty\x120\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x18.proto.v1.QuestionStatusR\x06status\x126\n" +
	"\bcategory\x18\v \x01(\x0e2\x1a.proto.v1.QuestionCategoryR\bcategory\x12\x16\n" +
	"\x06labels\x18\f \x03(\tR\x06labels\x12 \n" +
	"\vexplanation\x18\r \x01(\tR\vexplanation\x12 \n" +
	"\vattachments\x18\x0e \x03(\tR\vattachments\x12\x1d\n" +
	"\n" +
	"time_limit\x18\x0f \x01(\rR\ttimeLimit\"/\n" +
	"\x1dQuestionServiceCreateResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\xa1\x02\n" +
	"\x1cQuestionServiceSearchRequest\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12;\n" +
	"\rquestion_type\x18\x02 \x01(\x0e2\x16.proto.v1.QuestionTypeR\fquestionType\x12A\n" +
	"\n" +
	"difficulty\x18\x03 \x01(\x0e2!.proto.v1.QuestionDifficultyLevelR\n" +
	"difficulty\x126\n" +
	"\bcategory\x18\x04 \x01(\x0e2\x1a.proto.v1.QuestionCategoryR\bcategory\x12\x12\n" +
	"\x04page\x18\x05 \x01(\rR\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\rR\bpageSize\"g\n" +
	"\x1dQuestionServiceSearchResponse\x120\n" +
	"\tquestions\x18\x01 \x03(\v2\x12.proto.v1.QuestionR\tquestions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"\xe3\x04\n" +
	"\x1cQuestionServiceUpdateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x120\n" +
	"\acontent\x18\x03 \x01(\v2\x16.proto.v1.HyperTextTagR\acontent\x12'\n" +
	"\x0fsimple_question\x18\x04 \x01(\tR\x0esimpleQuestion\x12:\n" +
	"\rsub_questions\x18\x05 \x03(\v2\x15.proto.v1.SubQuestionR\fsubQuestions\x122\n" +
	"\aoptions\x18\x06 \x03(\v2\x18.proto.v1.QuestionOptionR\aoptions\x12B\n" +
	"\roption_tuples\x18\a \x03(\v2\x1d.proto.v1.QuestionOptionTupleR\foptionTuples\x12\x18\n" +
	"\aanswers\x18\b \x03(\tR\aanswers\x12A\n" +
	"\n" +
	"difficulty\x18\t \x01(\x0e2!.proto.v1.QuestionDifficultyLevelR\n" +
	"difficulty\x126\n" +
	"\bcategory\x18\n" +
	" \x01(\x0e2\x1a.proto.v1.QuestionCategoryR\bcategory\x12\x16\n" +
	"\x06labels\x18\v \x03(\tR\x06labels\x12 \n" +
	"\vexplanation\x18\f \x01(\tR\vexplanation\x12 \n" +
	"\vattachments\x18\r \x03(\tR\vattachments\x12\x1d\n" +
	"\n" +
	"time_limit\x18\x0e \x01(\rR\ttimeLimit\"\x1f\n" +
	"\x1dQuestionServiceUpdateResponse\".\n" +
	"\x1cQuestionServiceDeleteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\"\x1f\n" +
	"\x1dQuestionServiceDeleteResponse\"a\n" +
	"\x1dQuestionServicePublishRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x120\n" +
	"\x06status\x18\x02 \x01(\x0e2\x18.proto.v1.QuestionStatusR\x06status\" \n" +
	"\x1eQuestionServicePublishResponse*\x95\x02\n" +
	"\x10HyperTextTagType\x12#\n" +
	"\x1fHYPER_TEXT_TAG_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19HYPER_TEXT_TAG_TYPE_IMAGE\x10\x01\x12\x1d\n" +
	"\x19HYPER_TEXT_TAG_TYPE_AUDIO\x10\x02\x12\x1b\n" +
	"\x17HYPER_TEXT_TAG_TYPE_URL\x10\x03\x12\x1c\n" +
	"\x18HYPER_TEXT_TAG_TYPE_TEXT\x10\x04\x12!\n" +
	"\x1dHYPER_TEXT_TAG_TYPE_ANIMATION\x10\x05\x12\x1f\n" +
	"\x1bHYPER_TEXT_TAG_TYPE_V_STACK\x10\x06\x12\x1f\n" +
	"\x1bHYPER_TEXT_TAG_TYPE_H_STACK\x10\a*\x99\x01\n" +
	"\x12QuestionOptionType\x12$\n" +
	" QUESTION_OPTION_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19QUESTION_OPTION_TYPE_TEXT\x10\x01\x12\x1e\n" +
	"\x1aQUESTION_OPTION_TYPE_IMAGE\x10\x02\x12\x1e\n" +
	"\x1aQUESTION_OPTION_TYPE_AUDIO\x10\x03*\x8c\x04\n" +
	"\x17QuestionDifficultyLevel\x12)\n" +
	"%QUESTION_DIFFICULTY_LEVEL_UNSPECIFIED\x10\x00\x12%\n" +
	"!QUESTION_DIFFICULTY_LEVEL_CEFR_A1\x10\x01\x12%\n" +
	"!QUESTION_DIFFICULTY_LEVEL_CEFR_A2\x10\x02\x12%\n" +
	"!QUESTION_DIFFICULTY_LEVEL_CEFR_B1\x10\x03\x12%\n" +
	"!QUESTION_DIFFICULTY_LEVEL_CEFR_B2\x10\x04\x12%\n" +
	"!QUESTION_DIFFICULTY_LEVEL_CEFR_C1\x10\x05\x12%\n" +
	"!QUESTION_DIFFICULTY_LEVEL_CEFR_C2\x10\x06\x12#\n" +
	"\x1fQUESTION_DIFFICULTY_LEVEL_HSK_1\x10\a\x12#\n" +
	"\x1fQUESTION_DIFFICULTY_LEVEL_HSK_2\x10\b\x12#\n" +
	"\x1fQUESTION_DIFFICULTY_LEVEL_HSK_3\x10\t\x12#\n" +
	"\x1fQUESTION_DIFFICULTY_LEVEL_HSK_4\x10\n" +
	"\x12#\n" +
	"\x1fQUESTION_DIFFICULTY_LEVEL_HSK_5\x10\v\x12#\n" +
	"\x1fQUESTION_DIFFICULTY_LEVEL_HSK_6\x10\f*\x8a\x01\n" +
	"\x0eQuestionStatus\x12\x1f\n" +
	"\x1bQUESTION_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15QUESTION_STATUS_DRAFT\x10\x01\x12\x1d\n" +
	"\x19QUESTION_STATUS_REVIEWING\x10\x02\x12\x1d\n" +
	"\x19QUESTION_STATUS_PUBLISHED\x10\x03*\x90\x01\n" +
	"\x10QuestionCategory\x12!\n" +
	"\x1dQUESTION_CATEGORY_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aQUESTION_CATEGORY_EXERCISE\x10\x01\x12\x1a\n" +
	"\x16QUESTION_CATEGORY_TEST\x10\x02\x12\x1d\n" +
	"\x19QUESTION_CATEGORY_GRAMMAR\x10\x03*\x8c\x04\n" +
	"\fQuestionType\x12\x1d\n" +
	"\x19QUESTION_TYPE_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fQUESTION_TYPE_LISTEN_AND_SELECT\x10\x01\x12!\n" +
	"\x1dQUESTION_TYPE_MULTIPLE_CHOICE\x10\x02\x12\x1f\n" +
	"\x1bQUESTION_TYPE_FILL_IN_BLANK\x10\x03\x12\x1d\n" +
	"\x19QUESTION_TYPE_TRANSLATION\x10\x04\x12\x1a\n" +
	"\x16QUESTION_TYPE_MATCHING\x10\x05\x12\x1a\n" +
	"\x16QUESTION_TYPE_ORDERING\x10\x06\x12'\n" +
	"#QUESTION_TYPE_READING_COMPREHENSION\x10\a\x12\x1f\n" +
	"\x1bQUESTION_TYPE_SPEAKING_TEST\x10\b\x12\x1e\n" +
	"\x1aQUESTION_TYPE_WRITING_TEST\x10\t\x12\x1b\n" +
	"\x17QUESTION_TYPE_DICTATION\x10\n" +
	"\x12%\n" +
	"!QUESTION_TYPE_PICTURE_DESCRIPTION\x10\v\x12\x17\n" +
	"\x13QUESTION_TYPE_CLOZE\x10\f\x12\x17\n" +
	"\x13QUESTION_TYPE_ESSAY\x10\r\x12\x1f\n" +
	"\x1bQUESTION_TYPE_SINGLE_CHOICE\x10\x0e\x12\x1c\n" +
	"\x18QUESTION_TYPE_TRUE_FALSE\x10\x0f*Y\n" +
	"\x0fQuestionSubType\x12!\n" +
	"\x1dQUESTION_SUB_TYPE_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fQUESTION_SUB_TYPE_SINGLE_CHOICE\x10\x01*Y\n" +
	"\x0fSubQuestionType\x12!\n" +
	"\x1dSUB_QUESTION_TYPE_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fSUB_QUESTION_TYPE_SINGLE_CHOICE\x10\x01*\xe5\x02\n" +
	"\x18QuestionHyperTextTagType\x12,\n" +
	"(QUESTION_HYPER_TEXT_TAG_TYPE_UNSPECIFIED\x10\x00\x12%\n" +
	"!QUESTION_HYPER_TEXT_TAG_TYPE_TEXT\x10\x01\x12&\n" +
	"\"QUESTION_HYPER_TEXT_TAG_TYPE_IMAGE\x10\x02\x12&\n" +
	"\"QUESTION_HYPER_TEXT_TAG_TYPE_AUDIO\x10\x03\x12$\n" +
	" QUESTION_HYPER_TEXT_TAG_TYPE_URL\x10\x04\x12*\n" +
	"&QUESTION_HYPER_TEXT_TAG_TYPE_ANIMATION\x10\x05\x12(\n" +
	"$QUESTION_HYPER_TEXT_TAG_TYPE_V_STACK\x10\x06\x12(\n" +
	"$QUESTION_HYPER_TEXT_TAG_TYPE_H_STACK\x10\a2\xfa\x05\n" +
	"\x0fQuestionService\x12q\n" +
	"\x03Get\x12#.proto.v1.QuestionServiceGetRequest\x1a$.proto.v1.QuestionServiceGetResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/questions/{ids}\x12w\n" +
	"\x06Create\x12&.proto.v1.QuestionServiceCreateRequest\x1a'.proto.v1.QuestionServiceCreateResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/api/v1/questions\x12{\n" +
	"\x06Search\x12&.proto.v1.QuestionServiceSearchRequest\x1a'.proto.v1.QuestionServiceSearchResponse\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/api/v1/questions/search\x12|\n" +
	"\x06Update\x12&.proto.v1.QuestionServiceUpdateRequest\x1a'.proto.v1.QuestionServiceUpdateResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\x1a\x16/api/v1/questions/{id}\x12y\n" +
	"\x06Delete\x12&.proto.v1.QuestionServiceDeleteRequest\x1a'.proto.v1.QuestionServiceDeleteResponse\"\x1e\x82\xd3\xe4\x93\x02\x18*\x16/api/v1/questions/{id}\x12\x84\x01\n" +
	"\aPublish\x12'.proto.v1.QuestionServicePublishRequest\x1a(.proto.v1.QuestionServicePublishResponse\"&\x82\xd3\xe4\x93\x02 \"\x1e/api/v1/questions/{id}/publishB1Z(github.com/lazyjean/sla2/api/proto/v1;pb\xba\x02\x04SLA2b\x06proto3"

var (
	file_proto_v1_question_proto_rawDescOnce sync.Once
	file_proto_v1_question_proto_rawDescData []byte
)

func file_proto_v1_question_proto_rawDescGZIP() []byte {
	file_proto_v1_question_proto_rawDescOnce.Do(func() {
		file_proto_v1_question_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_question_proto_rawDesc), len(file_proto_v1_question_proto_rawDesc)))
	})
	return file_proto_v1_question_proto_rawDescData
}

var file_proto_v1_question_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_proto_v1_question_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_v1_question_proto_goTypes = []any{
	(HyperTextTagType)(0),                  // 0: proto.v1.HyperTextTagType
	(QuestionOptionType)(0),                // 1: proto.v1.QuestionOptionType
	(QuestionDifficultyLevel)(0),           // 2: proto.v1.QuestionDifficultyLevel
	(QuestionStatus)(0),                    // 3: proto.v1.QuestionStatus
	(QuestionCategory)(0),                  // 4: proto.v1.QuestionCategory
	(QuestionType)(0),                      // 5: proto.v1.QuestionType
	(QuestionSubType)(0),                   // 6: proto.v1.QuestionSubType
	(SubQuestionType)(0),                   // 7: proto.v1.SubQuestionType
	(QuestionHyperTextTagType)(0),          // 8: proto.v1.QuestionHyperTextTagType
	(*HyperTextTag)(nil),                   // 9: proto.v1.HyperTextTag
	(*Size)(nil),                           // 10: proto.v1.Size
	(*QuestionChatSenderAvatar)(nil),       // 11: proto.v1.QuestionChatSenderAvatar
	(*QuestionChatSender)(nil),             // 12: proto.v1.QuestionChatSender
	(*QuestionChatMessage)(nil),            // 13: proto.v1.QuestionChatMessage
	(*QuestionOption)(nil),                 // 14: proto.v1.QuestionOption
	(*QuestionOptionTuple)(nil),            // 15: proto.v1.QuestionOptionTuple
	(*Tag)(nil),                            // 16: proto.v1.Tag
	(*SubQuestion)(nil),                    // 17: proto.v1.SubQuestion
	(*Question)(nil),                       // 18: proto.v1.Question
	(*QuestionHyperTextTag)(nil),           // 19: proto.v1.QuestionHyperTextTag
	(*QuestionSize)(nil),                   // 20: proto.v1.QuestionSize
	(*QuestionTag)(nil),                    // 21: proto.v1.QuestionTag
	(*QuestionServiceGetRequest)(nil),      // 22: proto.v1.QuestionServiceGetRequest
	(*QuestionServiceGetResponse)(nil),     // 23: proto.v1.QuestionServiceGetResponse
	(*QuestionServiceCreateRequest)(nil),   // 24: proto.v1.QuestionServiceCreateRequest
	(*QuestionServiceCreateResponse)(nil),  // 25: proto.v1.QuestionServiceCreateResponse
	(*QuestionServiceSearchRequest)(nil),   // 26: proto.v1.QuestionServiceSearchRequest
	(*QuestionServiceSearchResponse)(nil),  // 27: proto.v1.QuestionServiceSearchResponse
	(*QuestionServiceUpdateRequest)(nil),   // 28: proto.v1.QuestionServiceUpdateRequest
	(*QuestionServiceUpdateResponse)(nil),  // 29: proto.v1.QuestionServiceUpdateResponse
	(*QuestionServiceDeleteRequest)(nil),   // 30: proto.v1.QuestionServiceDeleteRequest
	(*QuestionServiceDeleteResponse)(nil),  // 31: proto.v1.QuestionServiceDeleteResponse
	(*QuestionServicePublishRequest)(nil),  // 32: proto.v1.QuestionServicePublishRequest
	(*QuestionServicePublishResponse)(nil), // 33: proto.v1.QuestionServicePublishResponse
}
var file_proto_v1_question_proto_depIdxs = []int32{
	0,  // 0: proto.v1.HyperTextTag.type:type_name -> proto.v1.HyperTextTagType
	9,  // 1: proto.v1.HyperTextTag.children:type_name -> proto.v1.HyperTextTag
	10, // 2: proto.v1.QuestionChatSenderAvatar.size:type_name -> proto.v1.Size
	11, // 3: proto.v1.QuestionChatSender.avatar:type_name -> proto.v1.QuestionChatSenderAvatar
	12, // 4: proto.v1.QuestionChatMessage.sender:type_name -> proto.v1.QuestionChatSender
	9,  // 5: proto.v1.QuestionChatMessage.content:type_name -> proto.v1.HyperTextTag
	1,  // 6: proto.v1.QuestionOption.type:type_name -> proto.v1.QuestionOptionType
	14, // 7: proto.v1.QuestionOptionTuple.option1:type_name -> proto.v1.QuestionOption
	14, // 8: proto.v1.QuestionOptionTuple.option2:type_name -> proto.v1.QuestionOption
	7,  // 9: proto.v1.SubQuestion.question_type:type_name -> proto.v1.SubQuestionType
	14, // 10: proto.v1.SubQuestion.options:type_name -> proto.v1.QuestionOption
	5,  // 11: proto.v1.Question.question_type:type_name -> proto.v1.QuestionType
	9,  // 12: proto.v1.Question.content:type_name -> proto.v1.HyperTextTag
	17, // 13: proto.v1.Question.sub_questions:type_name -> proto.v1.SubQuestion
	14, // 14: proto.v1.Question.options:type_name -> proto.v1.QuestionOption
	15, // 15: proto.v1.Question.option_tuples:type_name -> proto.v1.QuestionOptionTuple
	2,  // 16: proto.v1.Question.difficulty:type_name -> proto.v1.QuestionDifficultyLevel
	3,  // 17: proto.v1.Question.status:type_name -> proto.v1.QuestionStatus
	4,  // 18: proto.v1.Question.category:type_name -> proto.v1.QuestionCategory
	8,  // 19: proto.v1.QuestionHyperTextTag.type:type_name -> proto.v1.QuestionHyperTextTagType
	19, // 20: proto.v1.QuestionHyperTextTag.children:type_name -> proto.v1.QuestionHyperTextTag
	18, // 21: proto.v1.QuestionServiceGetResponse.questions:type_name -> proto.v1.Question
	5,  // 22: proto.v1.QuestionServiceCreateRequest.question_type:type_name -> proto.v1.QuestionType
	9,  // 23: proto.v1.QuestionServiceCreateRequest.content:type_name -> proto.v1.HyperTextTag
	17, // 24: proto.v1.QuestionServiceCreateRequest.sub_questions:type_name -> proto.v1.SubQuestion
	14, // 25: proto.v1.QuestionServiceCreateRequest.options:type_name -> proto.v1.QuestionOption
	15, // 26: proto.v1.QuestionServiceCreateRequest.option_tuples:type_name -> proto.v1.QuestionOptionTuple
	2,  // 27: proto.v1.QuestionServiceCreateRequest.difficulty:type_name -> proto.v1.QuestionDifficultyLevel
	3,  // 28: proto.v1.QuestionServiceCreateRequest.status:type_name -> proto.v1.QuestionStatus
	4,  // 29: proto.v1.QuestionServiceCreateRequest.category:type_name -> proto.v1.QuestionCategory
	5,  // 30: proto.v1.QuestionServiceSearchRequest.question_type:type_name -> proto.v1.QuestionType
	2,  // 31: proto.v1.QuestionServiceSearchRequest.difficulty:type_name -> proto.v1.QuestionDifficultyLevel
	4,  // 32: proto.v1.QuestionServiceSearchRequest.category:type_name -> proto.v1.QuestionCategory
	18, // 33: proto.v1.QuestionServiceSearchResponse.questions:type_name -> proto.v1.Question
	9,  // 34: proto.v1.QuestionServiceUpdateRequest.content:type_name -> proto.v1.HyperTextTag
	17, // 35: proto.v1.QuestionServiceUpdateRequest.sub_questions:type_name -> proto.v1.SubQuestion
	14, // 36: proto.v1.QuestionServiceUpdateRequest.options:type_name -> proto.v1.QuestionOption
	15, // 37: proto.v1.QuestionServiceUpdateRequest.option_tuples:type_name -> proto.v1.QuestionOptionTuple
	2,  // 38: proto.v1.QuestionServiceUpdateRequest.difficulty:type_name -> proto.v1.QuestionDifficultyLevel
	4,  // 39: proto.v1.QuestionServiceUpdateRequest.category:type_name -> proto.v1.QuestionCategory
	3,  // 40: proto.v1.QuestionServicePublishRequest.status:type_name -> proto.v1.QuestionStatus
	22, // 41: proto.v1.QuestionService.Get:input_type -> proto.v1.QuestionServiceGetRequest
	24, // 42: proto.v1.QuestionService.Create:input_type -> proto.v1.QuestionServiceCreateRequest
	26, // 43: proto.v1.QuestionService.Search:input_type -> proto.v1.QuestionServiceSearchRequest
	28, // 44: proto.v1.QuestionService.Update:input_type -> proto.v1.QuestionServiceUpdateRequest
	30, // 45: proto.v1.QuestionService.Delete:input_type -> proto.v1.QuestionServiceDeleteRequest
	32, // 46: proto.v1.QuestionService.Publish:input_type -> proto.v1.QuestionServicePublishRequest
	23, // 47: proto.v1.QuestionService.Get:output_type -> proto.v1.QuestionServiceGetResponse
	25, // 48: proto.v1.QuestionService.Create:output_type -> proto.v1.QuestionServiceCreateResponse
	27, // 49: proto.v1.QuestionService.Search:output_type -> proto.v1.QuestionServiceSearchResponse
	29, // 50: proto.v1.QuestionService.Update:output_type -> proto.v1.QuestionServiceUpdateResponse
	31, // 51: proto.v1.QuestionService.Delete:output_type -> proto.v1.QuestionServiceDeleteResponse
	33, // 52: proto.v1.QuestionService.Publish:output_type -> proto.v1.QuestionServicePublishResponse
	47, // [47:53] is the sub-list for method output_type
	41, // [41:47] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_proto_v1_question_proto_init() }
func file_proto_v1_question_proto_init() {
	if File_proto_v1_question_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_question_proto_rawDesc), len(file_proto_v1_question_proto_rawDesc)),
			NumEnums:      9,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_question_proto_goTypes,
		DependencyIndexes: file_proto_v1_question_proto_depIdxs,
		EnumInfos:         file_proto_v1_question_proto_enumTypes,
		MessageInfos:      file_proto_v1_question_proto_msgTypes,
	}.Build()
	File_proto_v1_question_proto = out.File
	file_proto_v1_question_proto_goTypes = nil
	file_proto_v1_question_proto_depIdxs = nil
}
