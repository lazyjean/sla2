// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/v1/vocabulary.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// WordDifficultyLevel 定义单词难度等级
type WordDifficultyLevel int32

const (
	// 未指定难度，用于处理未知的新难度级别，客户端应该显示为"未知难度"
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_UNSPECIFIED WordDifficultyLevel = 0
	// CEFR 标准 (英语)
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_A1 WordDifficultyLevel = 1 // 基础入门
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_A2 WordDifficultyLevel = 2 // 基础进阶
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_B1 WordDifficultyLevel = 3 // 中级
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_B2 WordDifficultyLevel = 4 // 中高级
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_C1 WordDifficultyLevel = 5 // 高级
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_C2 WordDifficultyLevel = 6 // 精通
	// HSK 标准 (汉语)
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_HSK1 WordDifficultyLevel = 11 // HSK1级 - 入门
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_HSK2 WordDifficultyLevel = 12 // HSK2级 - 基础
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_HSK3 WordDifficultyLevel = 13 // HSK3级 - 初级
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_HSK4 WordDifficultyLevel = 14 // HSK4级 - 中级
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_HSK5 WordDifficultyLevel = 15 // HSK5级 - 高级
	WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_HSK6 WordDifficultyLevel = 16 // HSK6级 - 精通
)

// Enum value maps for WordDifficultyLevel.
var (
	WordDifficultyLevel_name = map[int32]string{
		0:  "WORD_DIFFICULTY_LEVEL_UNSPECIFIED",
		1:  "WORD_DIFFICULTY_LEVEL_A1",
		2:  "WORD_DIFFICULTY_LEVEL_A2",
		3:  "WORD_DIFFICULTY_LEVEL_B1",
		4:  "WORD_DIFFICULTY_LEVEL_B2",
		5:  "WORD_DIFFICULTY_LEVEL_C1",
		6:  "WORD_DIFFICULTY_LEVEL_C2",
		11: "WORD_DIFFICULTY_LEVEL_HSK1",
		12: "WORD_DIFFICULTY_LEVEL_HSK2",
		13: "WORD_DIFFICULTY_LEVEL_HSK3",
		14: "WORD_DIFFICULTY_LEVEL_HSK4",
		15: "WORD_DIFFICULTY_LEVEL_HSK5",
		16: "WORD_DIFFICULTY_LEVEL_HSK6",
	}
	WordDifficultyLevel_value = map[string]int32{
		"WORD_DIFFICULTY_LEVEL_UNSPECIFIED": 0,
		"WORD_DIFFICULTY_LEVEL_A1":          1,
		"WORD_DIFFICULTY_LEVEL_A2":          2,
		"WORD_DIFFICULTY_LEVEL_B1":          3,
		"WORD_DIFFICULTY_LEVEL_B2":          4,
		"WORD_DIFFICULTY_LEVEL_C1":          5,
		"WORD_DIFFICULTY_LEVEL_C2":          6,
		"WORD_DIFFICULTY_LEVEL_HSK1":        11,
		"WORD_DIFFICULTY_LEVEL_HSK2":        12,
		"WORD_DIFFICULTY_LEVEL_HSK3":        13,
		"WORD_DIFFICULTY_LEVEL_HSK4":        14,
		"WORD_DIFFICULTY_LEVEL_HSK5":        15,
		"WORD_DIFFICULTY_LEVEL_HSK6":        16,
	}
)

func (x WordDifficultyLevel) Enum() *WordDifficultyLevel {
	p := new(WordDifficultyLevel)
	*p = x
	return p
}

func (x WordDifficultyLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WordDifficultyLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_vocabulary_proto_enumTypes[0].Descriptor()
}

func (WordDifficultyLevel) Type() protoreflect.EnumType {
	return &file_proto_v1_vocabulary_proto_enumTypes[0]
}

func (x WordDifficultyLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WordDifficultyLevel.Descriptor instead.
func (WordDifficultyLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{0}
}

// WordPartOfSpeech 定义词性
type WordPartOfSpeech int32

const (
	// 未指定词性，用于处理未知的新词性，客户端应该显示为"未知词性"
	WordPartOfSpeech_WORD_PART_OF_SPEECH_UNSPECIFIED  WordPartOfSpeech = 0
	WordPartOfSpeech_WORD_PART_OF_SPEECH_NOUN         WordPartOfSpeech = 1  // 名词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_VERB         WordPartOfSpeech = 2  // 动词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_ADJECTIVE    WordPartOfSpeech = 3  // 形容词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_ADVERB       WordPartOfSpeech = 4  // 副词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_PRONOUN      WordPartOfSpeech = 5  // 代词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_PREPOSITION  WordPartOfSpeech = 6  // 介词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_CONJUNCTION  WordPartOfSpeech = 7  // 连词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_INTERJECTION WordPartOfSpeech = 8  // 感叹词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_ARTICLE      WordPartOfSpeech = 9  // 冠词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_DETERMINER   WordPartOfSpeech = 10 // 限定词
	WordPartOfSpeech_WORD_PART_OF_SPEECH_NUMERAL      WordPartOfSpeech = 11 // 数词
)

// Enum value maps for WordPartOfSpeech.
var (
	WordPartOfSpeech_name = map[int32]string{
		0:  "WORD_PART_OF_SPEECH_UNSPECIFIED",
		1:  "WORD_PART_OF_SPEECH_NOUN",
		2:  "WORD_PART_OF_SPEECH_VERB",
		3:  "WORD_PART_OF_SPEECH_ADJECTIVE",
		4:  "WORD_PART_OF_SPEECH_ADVERB",
		5:  "WORD_PART_OF_SPEECH_PRONOUN",
		6:  "WORD_PART_OF_SPEECH_PREPOSITION",
		7:  "WORD_PART_OF_SPEECH_CONJUNCTION",
		8:  "WORD_PART_OF_SPEECH_INTERJECTION",
		9:  "WORD_PART_OF_SPEECH_ARTICLE",
		10: "WORD_PART_OF_SPEECH_DETERMINER",
		11: "WORD_PART_OF_SPEECH_NUMERAL",
	}
	WordPartOfSpeech_value = map[string]int32{
		"WORD_PART_OF_SPEECH_UNSPECIFIED":  0,
		"WORD_PART_OF_SPEECH_NOUN":         1,
		"WORD_PART_OF_SPEECH_VERB":         2,
		"WORD_PART_OF_SPEECH_ADJECTIVE":    3,
		"WORD_PART_OF_SPEECH_ADVERB":       4,
		"WORD_PART_OF_SPEECH_PRONOUN":      5,
		"WORD_PART_OF_SPEECH_PREPOSITION":  6,
		"WORD_PART_OF_SPEECH_CONJUNCTION":  7,
		"WORD_PART_OF_SPEECH_INTERJECTION": 8,
		"WORD_PART_OF_SPEECH_ARTICLE":      9,
		"WORD_PART_OF_SPEECH_DETERMINER":   10,
		"WORD_PART_OF_SPEECH_NUMERAL":      11,
	}
)

func (x WordPartOfSpeech) Enum() *WordPartOfSpeech {
	p := new(WordPartOfSpeech)
	*p = x
	return p
}

func (x WordPartOfSpeech) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WordPartOfSpeech) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_vocabulary_proto_enumTypes[1].Descriptor()
}

func (WordPartOfSpeech) Type() protoreflect.EnumType {
	return &file_proto_v1_vocabulary_proto_enumTypes[1]
}

func (x WordPartOfSpeech) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WordPartOfSpeech.Descriptor instead.
func (WordPartOfSpeech) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{1}
}

// WordDefinition 定义单词释义
type WordDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PartOfSpeech  WordPartOfSpeech       `protobuf:"varint,2,opt,name=part_of_speech,json=partOfSpeech,proto3,enum=proto.v1.WordPartOfSpeech" json:"part_of_speech,omitempty"`
	Meaning       string                 `protobuf:"bytes,3,opt,name=meaning,proto3" json:"meaning,omitempty"`
	Example       string                 `protobuf:"bytes,4,opt,name=example,proto3" json:"example,omitempty"`
	Synonyms      []string               `protobuf:"bytes,5,rep,name=synonyms,proto3" json:"synonyms,omitempty"`
	Antonyms      []string               `protobuf:"bytes,6,rep,name=antonyms,proto3" json:"antonyms,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WordDefinition) Reset() {
	*x = WordDefinition{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordDefinition) ProtoMessage() {}

func (x *WordDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordDefinition.ProtoReflect.Descriptor instead.
func (*WordDefinition) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{0}
}

func (x *WordDefinition) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WordDefinition) GetPartOfSpeech() WordPartOfSpeech {
	if x != nil {
		return x.PartOfSpeech
	}
	return WordPartOfSpeech_WORD_PART_OF_SPEECH_UNSPECIFIED
}

func (x *WordDefinition) GetMeaning() string {
	if x != nil {
		return x.Meaning
	}
	return ""
}

func (x *WordDefinition) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *WordDefinition) GetSynonyms() []string {
	if x != nil {
		return x.Synonyms
	}
	return nil
}

func (x *WordDefinition) GetAntonyms() []string {
	if x != nil {
		return x.Antonyms
	}
	return nil
}

func (x *WordDefinition) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WordDefinition) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Word 单词信息
type Word struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Word          string                 `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"` // 单词本身
	Spelling      string                 `protobuf:"bytes,3,opt,name=spelling,proto3" json:"spelling,omitempty"`
	Pronunciation string                 `protobuf:"bytes,4,opt,name=pronunciation,proto3" json:"pronunciation,omitempty"`
	AudioUrl      string                 `protobuf:"bytes,5,opt,name=audio_url,json=audioUrl,proto3" json:"audio_url,omitempty"`
	Level         WordDifficultyLevel    `protobuf:"varint,6,opt,name=level,proto3,enum=proto.v1.WordDifficultyLevel" json:"level,omitempty"`
	Definitions   []*WordDefinition      `protobuf:"bytes,7,rep,name=definitions,proto3" json:"definitions,omitempty"`
	Examples      []string               `protobuf:"bytes,8,rep,name=examples,proto3" json:"examples,omitempty"`
	Tags          []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`              // 标签, 如: 基础1000字, 水果, 厨房 ...
	Categories    []string               `protobuf:"bytes,10,rep,name=categories,proto3" json:"categories,omitempty"` // 释义分类, 如: 食物, 颜色, 动物 ...
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Word) Reset() {
	*x = Word{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Word) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Word) ProtoMessage() {}

func (x *Word) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Word.ProtoReflect.Descriptor instead.
func (*Word) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{1}
}

func (x *Word) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Word) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *Word) GetSpelling() string {
	if x != nil {
		return x.Spelling
	}
	return ""
}

func (x *Word) GetPronunciation() string {
	if x != nil {
		return x.Pronunciation
	}
	return ""
}

func (x *Word) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

func (x *Word) GetLevel() WordDifficultyLevel {
	if x != nil {
		return x.Level
	}
	return WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_UNSPECIFIED
}

func (x *Word) GetDefinitions() []*WordDefinition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

func (x *Word) GetExamples() []string {
	if x != nil {
		return x.Examples
	}
	return nil
}

func (x *Word) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Word) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

// HanChar 汉字信息
type HanChar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Character     string                 `protobuf:"bytes,2,opt,name=character,proto3" json:"character,omitempty"`
	Pinyin        string                 `protobuf:"bytes,3,opt,name=pinyin,proto3" json:"pinyin,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`                                      // 标签, 如: 基础1000字, 水果, 厨房 ...
	Categories    []string               `protobuf:"bytes,5,rep,name=categories,proto3" json:"categories,omitempty"`                          // 释义分类, 如: 食物, 颜色, 动物 ...
	Examples      []string               `protobuf:"bytes,6,rep,name=examples,proto3" json:"examples,omitempty"`                              // 例句
	Level         WordDifficultyLevel    `protobuf:"varint,7,opt,name=level,proto3,enum=proto.v1.WordDifficultyLevel" json:"level,omitempty"` // 难度等级
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HanChar) Reset() {
	*x = HanChar{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HanChar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HanChar) ProtoMessage() {}

func (x *HanChar) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HanChar.ProtoReflect.Descriptor instead.
func (*HanChar) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{2}
}

func (x *HanChar) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HanChar) GetCharacter() string {
	if x != nil {
		return x.Character
	}
	return ""
}

func (x *HanChar) GetPinyin() string {
	if x != nil {
		return x.Pinyin
	}
	return ""
}

func (x *HanChar) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *HanChar) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *HanChar) GetExamples() []string {
	if x != nil {
		return x.Examples
	}
	return nil
}

func (x *HanChar) GetLevel() WordDifficultyLevel {
	if x != nil {
		return x.Level
	}
	return WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_UNSPECIFIED
}

type VocabularyServiceGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceGetRequest) Reset() {
	*x = VocabularyServiceGetRequest{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceGetRequest) ProtoMessage() {}

func (x *VocabularyServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceGetRequest.ProtoReflect.Descriptor instead.
func (*VocabularyServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{3}
}

func (x *VocabularyServiceGetRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type VocabularyServiceGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          *Word                  `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceGetResponse) Reset() {
	*x = VocabularyServiceGetResponse{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceGetResponse) ProtoMessage() {}

func (x *VocabularyServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceGetResponse.ProtoReflect.Descriptor instead.
func (*VocabularyServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{4}
}

func (x *VocabularyServiceGetResponse) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

type VocabularyServiceListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Level         WordDifficultyLevel    `protobuf:"varint,3,opt,name=level,proto3,enum=proto.v1.WordDifficultyLevel" json:"level,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Categories    []string               `protobuf:"bytes,5,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceListRequest) Reset() {
	*x = VocabularyServiceListRequest{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceListRequest) ProtoMessage() {}

func (x *VocabularyServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceListRequest.ProtoReflect.Descriptor instead.
func (*VocabularyServiceListRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{5}
}

func (x *VocabularyServiceListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *VocabularyServiceListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *VocabularyServiceListRequest) GetLevel() WordDifficultyLevel {
	if x != nil {
		return x.Level
	}
	return WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_UNSPECIFIED
}

func (x *VocabularyServiceListRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VocabularyServiceListRequest) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type VocabularyServiceListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Words         []*Word                `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceListResponse) Reset() {
	*x = VocabularyServiceListResponse{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceListResponse) ProtoMessage() {}

func (x *VocabularyServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceListResponse.ProtoReflect.Descriptor instead.
func (*VocabularyServiceListResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{6}
}

func (x *VocabularyServiceListResponse) GetWords() []*Word {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *VocabularyServiceListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 汇总当前库中已有的标签, 方便请求时过滤
type VocabularyServiceAllTagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceAllTagsRequest) Reset() {
	*x = VocabularyServiceAllTagsRequest{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceAllTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceAllTagsRequest) ProtoMessage() {}

func (x *VocabularyServiceAllTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceAllTagsRequest.ProtoReflect.Descriptor instead.
func (*VocabularyServiceAllTagsRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{7}
}

type VocabularyServiceAllTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []string               `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceAllTagsResponse) Reset() {
	*x = VocabularyServiceAllTagsResponse{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceAllTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceAllTagsResponse) ProtoMessage() {}

func (x *VocabularyServiceAllTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceAllTagsResponse.ProtoReflect.Descriptor instead.
func (*VocabularyServiceAllTagsResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{8}
}

func (x *VocabularyServiceAllTagsResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type VocabularyServiceListHanCharRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Level         WordDifficultyLevel    `protobuf:"varint,3,opt,name=level,proto3,enum=proto.v1.WordDifficultyLevel" json:"level,omitempty"`
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Categories    []string               `protobuf:"bytes,5,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceListHanCharRequest) Reset() {
	*x = VocabularyServiceListHanCharRequest{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceListHanCharRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceListHanCharRequest) ProtoMessage() {}

func (x *VocabularyServiceListHanCharRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceListHanCharRequest.ProtoReflect.Descriptor instead.
func (*VocabularyServiceListHanCharRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{9}
}

func (x *VocabularyServiceListHanCharRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *VocabularyServiceListHanCharRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *VocabularyServiceListHanCharRequest) GetLevel() WordDifficultyLevel {
	if x != nil {
		return x.Level
	}
	return WordDifficultyLevel_WORD_DIFFICULTY_LEVEL_UNSPECIFIED
}

func (x *VocabularyServiceListHanCharRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VocabularyServiceListHanCharRequest) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type VocabularyServiceListHanCharResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HanChars      []*HanChar             `protobuf:"bytes,1,rep,name=han_chars,json=hanChars,proto3" json:"han_chars,omitempty"`
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceListHanCharResponse) Reset() {
	*x = VocabularyServiceListHanCharResponse{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceListHanCharResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceListHanCharResponse) ProtoMessage() {}

func (x *VocabularyServiceListHanCharResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceListHanCharResponse.ProtoReflect.Descriptor instead.
func (*VocabularyServiceListHanCharResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{10}
}

func (x *VocabularyServiceListHanCharResponse) GetHanChars() []*HanChar {
	if x != nil {
		return x.HanChars
	}
	return nil
}

func (x *VocabularyServiceListHanCharResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type VocabularyServiceAllCategoriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceAllCategoriesRequest) Reset() {
	*x = VocabularyServiceAllCategoriesRequest{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceAllCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceAllCategoriesRequest) ProtoMessage() {}

func (x *VocabularyServiceAllCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceAllCategoriesRequest.ProtoReflect.Descriptor instead.
func (*VocabularyServiceAllCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{11}
}

type VocabularyServiceAllCategoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []string               `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceAllCategoriesResponse) Reset() {
	*x = VocabularyServiceAllCategoriesResponse{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceAllCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceAllCategoriesResponse) ProtoMessage() {}

func (x *VocabularyServiceAllCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceAllCategoriesResponse.ProtoReflect.Descriptor instead.
func (*VocabularyServiceAllCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{12}
}

func (x *VocabularyServiceAllCategoriesResponse) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type VocabularyServiceGetAllMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceGetAllMetadataRequest) Reset() {
	*x = VocabularyServiceGetAllMetadataRequest{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceGetAllMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceGetAllMetadataRequest) ProtoMessage() {}

func (x *VocabularyServiceGetAllMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceGetAllMetadataRequest.ProtoReflect.Descriptor instead.
func (*VocabularyServiceGetAllMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{13}
}

type VocabularyServiceGetAllMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []string               `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	Categories    []string               `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceGetAllMetadataResponse) Reset() {
	*x = VocabularyServiceGetAllMetadataResponse{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceGetAllMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceGetAllMetadataResponse) ProtoMessage() {}

func (x *VocabularyServiceGetAllMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceGetAllMetadataResponse.ProtoReflect.Descriptor instead.
func (*VocabularyServiceGetAllMetadataResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{14}
}

func (x *VocabularyServiceGetAllMetadataResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VocabularyServiceGetAllMetadataResponse) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type VocabularyServiceBatchCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Words         []*Word                `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceBatchCreateRequest) Reset() {
	*x = VocabularyServiceBatchCreateRequest{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceBatchCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceBatchCreateRequest) ProtoMessage() {}

func (x *VocabularyServiceBatchCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceBatchCreateRequest.ProtoReflect.Descriptor instead.
func (*VocabularyServiceBatchCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{15}
}

func (x *VocabularyServiceBatchCreateRequest) GetWords() []*Word {
	if x != nil {
		return x.Words
	}
	return nil
}

type VocabularyServiceBatchCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []uint32               `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` // 创建成功的单词ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceBatchCreateResponse) Reset() {
	*x = VocabularyServiceBatchCreateResponse{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceBatchCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceBatchCreateResponse) ProtoMessage() {}

func (x *VocabularyServiceBatchCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceBatchCreateResponse.ProtoReflect.Descriptor instead.
func (*VocabularyServiceBatchCreateResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{16}
}

func (x *VocabularyServiceBatchCreateResponse) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type VocabularyServiceBatchCreateHanCharRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HanChars      []*HanChar             `protobuf:"bytes,1,rep,name=han_chars,json=hanChars,proto3" json:"han_chars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceBatchCreateHanCharRequest) Reset() {
	*x = VocabularyServiceBatchCreateHanCharRequest{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceBatchCreateHanCharRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceBatchCreateHanCharRequest) ProtoMessage() {}

func (x *VocabularyServiceBatchCreateHanCharRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceBatchCreateHanCharRequest.ProtoReflect.Descriptor instead.
func (*VocabularyServiceBatchCreateHanCharRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{17}
}

func (x *VocabularyServiceBatchCreateHanCharRequest) GetHanChars() []*HanChar {
	if x != nil {
		return x.HanChars
	}
	return nil
}

type VocabularyServiceBatchCreateHanCharResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []uint32               `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` // 创建成功的汉字ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocabularyServiceBatchCreateHanCharResponse) Reset() {
	*x = VocabularyServiceBatchCreateHanCharResponse{}
	mi := &file_proto_v1_vocabulary_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocabularyServiceBatchCreateHanCharResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocabularyServiceBatchCreateHanCharResponse) ProtoMessage() {}

func (x *VocabularyServiceBatchCreateHanCharResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vocabulary_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocabularyServiceBatchCreateHanCharResponse.ProtoReflect.Descriptor instead.
func (*VocabularyServiceBatchCreateHanCharResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vocabulary_proto_rawDescGZIP(), []int{18}
}

func (x *VocabularyServiceBatchCreateHanCharResponse) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_proto_v1_vocabulary_proto protoreflect.FileDescriptor

const file_proto_v1_vocabulary_proto_rawDesc = "" +
	"\n" +
	"\x19proto/v1/vocabulary.proto\x12\bproto.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto\"\xc4\x02\n" +
	"\x0eWordDefinition\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12@\n" +
	"\x0epart_of_speech\x18\x02 \x01(\x0e2\x1a.proto.v1.WordPartOfSpeechR\fpartOfSpeech\x12\x18\n" +
	"\ameaning\x18\x03 \x01(\tR\ameaning\x12\x18\n" +
	"\aexample\x18\x04 \x01(\tR\aexample\x12\x1a\n" +
	"\bsynonyms\x18\x05 \x03(\tR\bsynonyms\x12\x1a\n" +
	"\bantonyms\x18\x06 \x03(\tR\bantonyms\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xca\x02\n" +
	"\x04Word\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04word\x18\x02 \x01(\tR\x04word\x12\x1a\n" +
	"\bspelling\x18\x03 \x01(\tR\bspelling\x12$\n" +
	"\rpronunciation\x18\x04 \x01(\tR\rpronunciation\x12\x1b\n" +
	"\taudio_url\x18\x05 \x01(\tR\baudioUrl\x123\n" +
	"\x05level\x18\x06 \x01(\x0e2\x1d.proto.v1.WordDifficultyLevelR\x05level\x12:\n" +
	"\vdefinitions\x18\a \x03(\v2\x18.proto.v1.WordDefinitionR\vdefinitions\x12\x1a\n" +
	"\bexamples\x18\b \x03(\tR\bexamples\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x12\x1e\n" +
	"\n" +
	"categories\x18\n" +
	" \x03(\tR\n" +
	"categories\"\xd4\x01\n" +
	"\aHanChar\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1c\n" +
	"\tcharacter\x18\x02 \x01(\tR\tcharacter\x12\x16\n" +
	"\x06pinyin\x18\x03 \x01(\tR\x06pinyin\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x1e\n" +
	"\n" +
	"categories\x18\x05 \x03(\tR\n" +
	"categories\x12\x1a\n" +
	"\bexamples\x18\x06 \x03(\tR\bexamples\x123\n" +
	"\x05level\x18\a \x01(\x0e2\x1d.proto.v1.WordDifficultyLevelR\x05level\"-\n" +
	"\x1bVocabularyServiceGetRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"B\n" +
	"\x1cVocabularyServiceGetResponse\x12\"\n" +
	"\x04word\x18\x01 \x01(\v2\x0e.proto.v1.WordR\x04word\"\xb8\x01\n" +
	"\x1cVocabularyServiceListRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\rR\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\rR\bpageSize\x123\n" +
	"\x05level\x18\x03 \x01(\x0e2\x1d.proto.v1.WordDifficultyLevelR\x05level\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x1e\n" +
	"\n" +
	"categories\x18\x05 \x03(\tR\n" +
	"categories\"[\n" +
	"\x1dVocabularyServiceListResponse\x12$\n" +
	"\x05words\x18\x01 \x03(\v2\x0e.proto.v1.WordR\x05words\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"!\n" +
	"\x1fVocabularyServiceAllTagsRequest\"6\n" +
	" VocabularyServiceAllTagsResponse\x12\x12\n" +
	"\x04tags\x18\x01 \x03(\tR\x04tags\"\xbf\x01\n" +
	"#VocabularyServiceListHanCharRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\rR\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\rR\bpageSize\x123\n" +
	"\x05level\x18\x03 \x01(\x0e2\x1d.proto.v1.WordDifficultyLevelR\x05level\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\x12\x1e\n" +
	"\n" +
	"categories\x18\x05 \x03(\tR\n" +
	"categories\"l\n" +
	"$VocabularyServiceListHanCharResponse\x12.\n" +
	"\than_chars\x18\x01 \x03(\v2\x11.proto.v1.HanCharR\bhanChars\x12\x14\n" +
	"\x05total\x18\x02 \x01(\rR\x05total\"'\n" +
	"%VocabularyServiceAllCategoriesRequest\"H\n" +
	"&VocabularyServiceAllCategoriesResponse\x12\x1e\n" +
	"\n" +
	"categories\x18\x01 \x03(\tR\n" +
	"categories\"(\n" +
	"&VocabularyServiceGetAllMetadataRequest\"]\n" +
	"'VocabularyServiceGetAllMetadataResponse\x12\x12\n" +
	"\x04tags\x18\x01 \x03(\tR\x04tags\x12\x1e\n" +
	"\n" +
	"categories\x18\x02 \x03(\tR\n" +
	"categories\"K\n" +
	"#VocabularyServiceBatchCreateRequest\x12$\n" +
	"\x05words\x18\x01 \x03(\v2\x0e.proto.v1.WordR\x05words\"8\n" +
	"$VocabularyServiceBatchCreateResponse\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\rR\x03ids\"\\\n" +
	"*VocabularyServiceBatchCreateHanCharRequest\x12.\n" +
	"\than_chars\x18\x01 \x03(\v2\x11.proto.v1.HanCharR\bhanChars\"?\n" +
	"+VocabularyServiceBatchCreateHanCharResponse\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\rR\x03ids*\xb0\x03\n" +
	"\x13WordDifficultyLevel\x12%\n" +
	"!WORD_DIFFICULTY_LEVEL_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18WORD_DIFFICULTY_LEVEL_A1\x10\x01\x12\x1c\n" +
	"\x18WORD_DIFFICULTY_LEVEL_A2\x10\x02\x12\x1c\n" +
	"\x18WORD_DIFFICULTY_LEVEL_B1\x10\x03\x12\x1c\n" +
	"\x18WORD_DIFFICULTY_LEVEL_B2\x10\x04\x12\x1c\n" +
	"\x18WORD_DIFFICULTY_LEVEL_C1\x10\x05\x12\x1c\n" +
	"\x18WORD_DIFFICULTY_LEVEL_C2\x10\x06\x12\x1e\n" +
	"\x1aWORD_DIFFICULTY_LEVEL_HSK1\x10\v\x12\x1e\n" +
	"\x1aWORD_DIFFICULTY_LEVEL_HSK2\x10\f\x12\x1e\n" +
	"\x1aWORD_DIFFICULTY_LEVEL_HSK3\x10\r\x12\x1e\n" +
	"\x1aWORD_DIFFICULTY_LEVEL_HSK4\x10\x0e\x12\x1e\n" +
	"\x1aWORD_DIFFICULTY_LEVEL_HSK5\x10\x0f\x12\x1e\n" +
	"\x1aWORD_DIFFICULTY_LEVEL_HSK6\x10\x10*\xad\x03\n" +
	"\x10WordPartOfSpeech\x12#\n" +
	"\x1fWORD_PART_OF_SPEECH_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18WORD_PART_OF_SPEECH_NOUN\x10\x01\x12\x1c\n" +
	"\x18WORD_PART_OF_SPEECH_VERB\x10\x02\x12!\n" +
	"\x1dWORD_PART_OF_SPEECH_ADJECTIVE\x10\x03\x12\x1e\n" +
	"\x1aWORD_PART_OF_SPEECH_ADVERB\x10\x04\x12\x1f\n" +
	"\x1bWORD_PART_OF_SPEECH_PRONOUN\x10\x05\x12#\n" +
	"\x1fWORD_PART_OF_SPEECH_PREPOSITION\x10\x06\x12#\n" +
	"\x1fWORD_PART_OF_SPEECH_CONJUNCTION\x10\a\x12$\n" +
	" WORD_PART_OF_SPEECH_INTERJECTION\x10\b\x12\x1f\n" +
	"\x1bWORD_PART_OF_SPEECH_ARTICLE\x10\t\x12\"\n" +
	"\x1eWORD_PART_OF_SPEECH_DETERMINER\x10\n" +
	"\x12\x1f\n" +
	"\x1bWORD_PART_OF_SPEECH_NUMERAL\x10\v2\x91\a\n" +
	"\x11VocabularyService\x12w\n" +
	"\x03Get\x12%.proto.v1.VocabularyServiceGetRequest\x1a&.proto.v1.VocabularyServiceGetResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/api/v1/vocabularies/{id}\x12u\n" +
	"\x04List\x12&.proto.v1.VocabularyServiceListRequest\x1a'.proto.v1.VocabularyServiceListResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/api/v1/vocabularies\x12\x9c\x01\n" +
	"\x0eGetAllMetadata\x120.proto.v1.VocabularyServiceGetAllMetadataRequest\x1a1.proto.v1.VocabularyServiceGetAllMetadataResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/api/v1/vocabularies/metadata\x12\x94\x01\n" +
	"\vListHanChar\x12-.proto.v1.VocabularyServiceListHanCharRequest\x1a..proto.v1.VocabularyServiceListHanCharResponse\"&\x82\xd3\xe4\x93\x02 \x12\x1e/api/v1/vocabularies/han-chars\x12\x9a\x01\n" +
	"\vBatchCreate\x12-.proto.v1.VocabularyServiceBatchCreateRequest\x1a..proto.v1.VocabularyServiceBatchCreateResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/api/v1/vocabularies/batch-create\x12\xb8\x01\n" +
	"\x12BatchCreateHanChar\x124.proto.v1.VocabularyServiceBatchCreateHanCharRequest\x1a5.proto.v1.VocabularyServiceBatchCreateHanCharResponse\"5\x82\xd3\xe4\x93\x02/:\x01*\"*/api/v1/vocabularies/batch-create-han-charB1Z(github.com/lazyjean/sla2/api/proto/v1;pb\xba\x02\x04SLA2b\x06proto3"

var (
	file_proto_v1_vocabulary_proto_rawDescOnce sync.Once
	file_proto_v1_vocabulary_proto_rawDescData []byte
)

func file_proto_v1_vocabulary_proto_rawDescGZIP() []byte {
	file_proto_v1_vocabulary_proto_rawDescOnce.Do(func() {
		file_proto_v1_vocabulary_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_vocabulary_proto_rawDesc), len(file_proto_v1_vocabulary_proto_rawDesc)))
	})
	return file_proto_v1_vocabulary_proto_rawDescData
}

var file_proto_v1_vocabulary_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_v1_vocabulary_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_v1_vocabulary_proto_goTypes = []any{
	(WordDifficultyLevel)(0),                            // 0: proto.v1.WordDifficultyLevel
	(WordPartOfSpeech)(0),                               // 1: proto.v1.WordPartOfSpeech
	(*WordDefinition)(nil),                              // 2: proto.v1.WordDefinition
	(*Word)(nil),                                        // 3: proto.v1.Word
	(*HanChar)(nil),                                     // 4: proto.v1.HanChar
	(*VocabularyServiceGetRequest)(nil),                 // 5: proto.v1.VocabularyServiceGetRequest
	(*VocabularyServiceGetResponse)(nil),                // 6: proto.v1.VocabularyServiceGetResponse
	(*VocabularyServiceListRequest)(nil),                // 7: proto.v1.VocabularyServiceListRequest
	(*VocabularyServiceListResponse)(nil),               // 8: proto.v1.VocabularyServiceListResponse
	(*VocabularyServiceAllTagsRequest)(nil),             // 9: proto.v1.VocabularyServiceAllTagsRequest
	(*VocabularyServiceAllTagsResponse)(nil),            // 10: proto.v1.VocabularyServiceAllTagsResponse
	(*VocabularyServiceListHanCharRequest)(nil),         // 11: proto.v1.VocabularyServiceListHanCharRequest
	(*VocabularyServiceListHanCharResponse)(nil),        // 12: proto.v1.VocabularyServiceListHanCharResponse
	(*VocabularyServiceAllCategoriesRequest)(nil),       // 13: proto.v1.VocabularyServiceAllCategoriesRequest
	(*VocabularyServiceAllCategoriesResponse)(nil),      // 14: proto.v1.VocabularyServiceAllCategoriesResponse
	(*VocabularyServiceGetAllMetadataRequest)(nil),      // 15: proto.v1.VocabularyServiceGetAllMetadataRequest
	(*VocabularyServiceGetAllMetadataResponse)(nil),     // 16: proto.v1.VocabularyServiceGetAllMetadataResponse
	(*VocabularyServiceBatchCreateRequest)(nil),         // 17: proto.v1.VocabularyServiceBatchCreateRequest
	(*VocabularyServiceBatchCreateResponse)(nil),        // 18: proto.v1.VocabularyServiceBatchCreateResponse
	(*VocabularyServiceBatchCreateHanCharRequest)(nil),  // 19: proto.v1.VocabularyServiceBatchCreateHanCharRequest
	(*VocabularyServiceBatchCreateHanCharResponse)(nil), // 20: proto.v1.VocabularyServiceBatchCreateHanCharResponse
	(*timestamppb.Timestamp)(nil),                       // 21: google.protobuf.Timestamp
}
var file_proto_v1_vocabulary_proto_depIdxs = []int32{
	1,  // 0: proto.v1.WordDefinition.part_of_speech:type_name -> proto.v1.WordPartOfSpeech
	21, // 1: proto.v1.WordDefinition.created_at:type_name -> google.protobuf.Timestamp
	21, // 2: proto.v1.WordDefinition.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 3: proto.v1.Word.level:type_name -> proto.v1.WordDifficultyLevel
	2,  // 4: proto.v1.Word.definitions:type_name -> proto.v1.WordDefinition
	0,  // 5: proto.v1.HanChar.level:type_name -> proto.v1.WordDifficultyLevel
	3,  // 6: proto.v1.VocabularyServiceGetResponse.word:type_name -> proto.v1.Word
	0,  // 7: proto.v1.VocabularyServiceListRequest.level:type_name -> proto.v1.WordDifficultyLevel
	3,  // 8: proto.v1.VocabularyServiceListResponse.words:type_name -> proto.v1.Word
	0,  // 9: proto.v1.VocabularyServiceListHanCharRequest.level:type_name -> proto.v1.WordDifficultyLevel
	4,  // 10: proto.v1.VocabularyServiceListHanCharResponse.han_chars:type_name -> proto.v1.HanChar
	3,  // 11: proto.v1.VocabularyServiceBatchCreateRequest.words:type_name -> proto.v1.Word
	4,  // 12: proto.v1.VocabularyServiceBatchCreateHanCharRequest.han_chars:type_name -> proto.v1.HanChar
	5,  // 13: proto.v1.VocabularyService.Get:input_type -> proto.v1.VocabularyServiceGetRequest
	7,  // 14: proto.v1.VocabularyService.List:input_type -> proto.v1.VocabularyServiceListRequest
	15, // 15: proto.v1.VocabularyService.GetAllMetadata:input_type -> proto.v1.VocabularyServiceGetAllMetadataRequest
	11, // 16: proto.v1.VocabularyService.ListHanChar:input_type -> proto.v1.VocabularyServiceListHanCharRequest
	17, // 17: proto.v1.VocabularyService.BatchCreate:input_type -> proto.v1.VocabularyServiceBatchCreateRequest
	19, // 18: proto.v1.VocabularyService.BatchCreateHanChar:input_type -> proto.v1.VocabularyServiceBatchCreateHanCharRequest
	6,  // 19: proto.v1.VocabularyService.Get:output_type -> proto.v1.VocabularyServiceGetResponse
	8,  // 20: proto.v1.VocabularyService.List:output_type -> proto.v1.VocabularyServiceListResponse
	16, // 21: proto.v1.VocabularyService.GetAllMetadata:output_type -> proto.v1.VocabularyServiceGetAllMetadataResponse
	12, // 22: proto.v1.VocabularyService.ListHanChar:output_type -> proto.v1.VocabularyServiceListHanCharResponse
	18, // 23: proto.v1.VocabularyService.BatchCreate:output_type -> proto.v1.VocabularyServiceBatchCreateResponse
	20, // 24: proto.v1.VocabularyService.BatchCreateHanChar:output_type -> proto.v1.VocabularyServiceBatchCreateHanCharResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_v1_vocabulary_proto_init() }
func file_proto_v1_vocabulary_proto_init() {
	if File_proto_v1_vocabulary_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_vocabulary_proto_rawDesc), len(file_proto_v1_vocabulary_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_vocabulary_proto_goTypes,
		DependencyIndexes: file_proto_v1_vocabulary_proto_depIdxs,
		EnumInfos:         file_proto_v1_vocabulary_proto_enumTypes,
		MessageInfos:      file_proto_v1_vocabulary_proto_msgTypes,
	}.Build()
	File_proto_v1_vocabulary_proto = out.File
	file_proto_v1_vocabulary_proto_goTypes = nil
	file_proto_v1_vocabulary_proto_depIdxs = nil
}
