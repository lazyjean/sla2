// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: proto/v1/course.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CourseLevel 课程难度级别
type CourseLevel int32

const (
	CourseLevel_COURSE_LEVEL_UNSPECIFIED  CourseLevel = 0
	CourseLevel_COURSE_LEVEL_BEGINNER     CourseLevel = 1
	CourseLevel_COURSE_LEVEL_INTERMEDIATE CourseLevel = 2
	CourseLevel_COURSE_LEVEL_ADVANCED     CourseLevel = 3
)

// Enum value maps for CourseLevel.
var (
	CourseLevel_name = map[int32]string{
		0: "COURSE_LEVEL_UNSPECIFIED",
		1: "COURSE_LEVEL_BEGINNER",
		2: "COURSE_LEVEL_INTERMEDIATE",
		3: "COURSE_LEVEL_ADVANCED",
	}
	CourseLevel_value = map[string]int32{
		"COURSE_LEVEL_UNSPECIFIED":  0,
		"COURSE_LEVEL_BEGINNER":     1,
		"COURSE_LEVEL_INTERMEDIATE": 2,
		"COURSE_LEVEL_ADVANCED":     3,
	}
)

func (x CourseLevel) Enum() *CourseLevel {
	p := new(CourseLevel)
	*p = x
	return p
}

func (x CourseLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CourseLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_course_proto_enumTypes[0].Descriptor()
}

func (CourseLevel) Type() protoreflect.EnumType {
	return &file_proto_v1_course_proto_enumTypes[0]
}

func (x CourseLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CourseLevel.Descriptor instead.
func (CourseLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{0}
}

// CourseStatus 课程状态
type CourseStatus int32

const (
	CourseStatus_COURSE_STATUS_UNSPECIFIED CourseStatus = 0
	CourseStatus_COURSE_STATUS_DRAFT       CourseStatus = 1
	CourseStatus_COURSE_STATUS_PUBLISHED   CourseStatus = 2
	CourseStatus_COURSE_STATUS_ARCHIVED    CourseStatus = 3
)

// Enum value maps for CourseStatus.
var (
	CourseStatus_name = map[int32]string{
		0: "COURSE_STATUS_UNSPECIFIED",
		1: "COURSE_STATUS_DRAFT",
		2: "COURSE_STATUS_PUBLISHED",
		3: "COURSE_STATUS_ARCHIVED",
	}
	CourseStatus_value = map[string]int32{
		"COURSE_STATUS_UNSPECIFIED": 0,
		"COURSE_STATUS_DRAFT":       1,
		"COURSE_STATUS_PUBLISHED":   2,
		"COURSE_STATUS_ARCHIVED":    3,
	}
)

func (x CourseStatus) Enum() *CourseStatus {
	p := new(CourseStatus)
	*p = x
	return p
}

func (x CourseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CourseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_course_proto_enumTypes[1].Descriptor()
}

func (CourseStatus) Type() protoreflect.EnumType {
	return &file_proto_v1_course_proto_enumTypes[1]
}

func (x CourseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CourseStatus.Descriptor instead.
func (CourseStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{1}
}

// Course 课程信息
type Course struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                    // 课程ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                               // 课程标题
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                 // 课程描述
	CoverUrl      string                 `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`         // 封面图片URL
	Level         CourseLevel            `protobuf:"varint,5,opt,name=level,proto3,enum=proto.v1.CourseLevel" json:"level,omitempty"`    // 难度级别
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                                 // 课程标签
	Status        CourseStatus           `protobuf:"varint,7,opt,name=status,proto3,enum=proto.v1.CourseStatus" json:"status,omitempty"` // 课程状态
	Sections      []*CourseSection       `protobuf:"bytes,8,rep,name=sections,proto3" json:"sections,omitempty"`                         // 课程章节列表
	Version       uint32                 `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`                          // 版本号，当课程内容有更新时，版本号+1
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`     // 创建时间
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`     // 更新时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Course) Reset() {
	*x = Course{}
	mi := &file_proto_v1_course_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{0}
}

func (x *Course) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Course) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Course) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Course) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Course) GetLevel() CourseLevel {
	if x != nil {
		return x.Level
	}
	return CourseLevel_COURSE_LEVEL_UNSPECIFIED
}

func (x *Course) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Course) GetStatus() CourseStatus {
	if x != nil {
		return x.Status
	}
	return CourseStatus_COURSE_STATUS_UNSPECIFIED
}

func (x *Course) GetSections() []*CourseSection {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *Course) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Course) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Course) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// SimpleCourse 简化的课程信息，用于列表展示
type SimpleCourse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                 // 课程ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                            // 课程标题
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                              // 课程描述
	CoverUrl      string                 `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`      // 封面图片URL
	Level         CourseLevel            `protobuf:"varint,5,opt,name=level,proto3,enum=proto.v1.CourseLevel" json:"level,omitempty"` // 难度级别
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                              // 课程标签
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleCourse) Reset() {
	*x = SimpleCourse{}
	mi := &file_proto_v1_course_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleCourse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleCourse) ProtoMessage() {}

func (x *SimpleCourse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleCourse.ProtoReflect.Descriptor instead.
func (*SimpleCourse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{1}
}

func (x *SimpleCourse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SimpleCourse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SimpleCourse) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SimpleCourse) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *SimpleCourse) GetLevel() CourseLevel {
	if x != nil {
		return x.Level
	}
	return CourseLevel_COURSE_LEVEL_UNSPECIFIED
}

func (x *SimpleCourse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// CreateCourseRequest 创建课程请求
type CourseServiceCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                            // 课程标题
	Desc          string                 `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`                              // 课程描述
	CoverUrl      string                 `protobuf:"bytes,3,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`      // 封面图片URL
	Level         CourseLevel            `protobuf:"varint,4,opt,name=level,proto3,enum=proto.v1.CourseLevel" json:"level,omitempty"` // 难度级别
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`                              // 课程标签
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceCreateRequest) Reset() {
	*x = CourseServiceCreateRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceCreateRequest) ProtoMessage() {}

func (x *CourseServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{2}
}

func (x *CourseServiceCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseServiceCreateRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CourseServiceCreateRequest) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *CourseServiceCreateRequest) GetLevel() CourseLevel {
	if x != nil {
		return x.Level
	}
	return CourseLevel_COURSE_LEVEL_UNSPECIFIED
}

func (x *CourseServiceCreateRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// CreateCourseResponse 创建课程响应
type CourseServiceCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 创建的课程信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceCreateResponse) Reset() {
	*x = CourseServiceCreateResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceCreateResponse) ProtoMessage() {}

func (x *CourseServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{3}
}

func (x *CourseServiceCreateResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// UpdateCourseRequest 更新课程请求
type CourseServiceUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                    // 课程ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                               // 课程标题
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                 // 课程描述
	CoverUrl      string                 `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`         // 封面图片URL
	Level         CourseLevel            `protobuf:"varint,5,opt,name=level,proto3,enum=proto.v1.CourseLevel" json:"level,omitempty"`    // 难度级别
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                                 // 课程标签
	Status        CourseStatus           `protobuf:"varint,7,opt,name=status,proto3,enum=proto.v1.CourseStatus" json:"status,omitempty"` // 课程状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceUpdateRequest) Reset() {
	*x = CourseServiceUpdateRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceUpdateRequest) ProtoMessage() {}

func (x *CourseServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{4}
}

func (x *CourseServiceUpdateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseServiceUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseServiceUpdateRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CourseServiceUpdateRequest) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *CourseServiceUpdateRequest) GetLevel() CourseLevel {
	if x != nil {
		return x.Level
	}
	return CourseLevel_COURSE_LEVEL_UNSPECIFIED
}

func (x *CourseServiceUpdateRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CourseServiceUpdateRequest) GetStatus() CourseStatus {
	if x != nil {
		return x.Status
	}
	return CourseStatus_COURSE_STATUS_UNSPECIFIED
}

// UpdateCourseResponse 更新课程响应
type CourseServiceUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 更新后的课程ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceUpdateResponse) Reset() {
	*x = CourseServiceUpdateResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceUpdateResponse) ProtoMessage() {}

func (x *CourseServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{5}
}

func (x *CourseServiceUpdateResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetCourseRequest 获取课程详情请求
type CourseServiceGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 课程ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceGetRequest) Reset() {
	*x = CourseServiceGetRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceGetRequest) ProtoMessage() {}

func (x *CourseServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceGetRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{6}
}

func (x *CourseServiceGetRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// GetCourseResponse 获取课程详情响应
type CourseServiceGetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Course        *Course                `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"` // 课程信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceGetResponse) Reset() {
	*x = CourseServiceGetResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceGetResponse) ProtoMessage() {}

func (x *CourseServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceGetResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{7}
}

func (x *CourseServiceGetResponse) GetCourse() *Course {
	if x != nil {
		return x.Course
	}
	return nil
}

// DeleteCourseRequest 删除课程请求, 未正式上架的课程可以删除, 上架后不能删除, 只能下架
type CourseServiceDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 课程ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceDeleteRequest) Reset() {
	*x = CourseServiceDeleteRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceDeleteRequest) ProtoMessage() {}

func (x *CourseServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{8}
}

func (x *CourseServiceDeleteRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// DeleteCourseResponse 删除课程响应
type CourseServiceDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceDeleteResponse) Reset() {
	*x = CourseServiceDeleteResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceDeleteResponse) ProtoMessage() {}

func (x *CourseServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{9}
}

// searchCourseRequest 搜索课程请求
type CourseServiceSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`                        // 关键词
	Level         CourseLevel            `protobuf:"varint,2,opt,name=level,proto3,enum=proto.v1.CourseLevel" json:"level,omitempty"` // 难度级别（可选）
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`                              // 标签（可选）
	Page          uint32                 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`                             // 页码
	PageSize      uint32                 `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`     // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceSearchRequest) Reset() {
	*x = CourseServiceSearchRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceSearchRequest) ProtoMessage() {}

func (x *CourseServiceSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceSearchRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{10}
}

func (x *CourseServiceSearchRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *CourseServiceSearchRequest) GetLevel() CourseLevel {
	if x != nil {
		return x.Level
	}
	return CourseLevel_COURSE_LEVEL_UNSPECIFIED
}

func (x *CourseServiceSearchRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CourseServiceSearchRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CourseServiceSearchRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// SearchCourseResponse 搜索课程响应
type CourseServiceSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Courses       []*SimpleCourse        `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"` // 课程列表
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`    // 总数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceSearchResponse) Reset() {
	*x = CourseServiceSearchResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceSearchResponse) ProtoMessage() {}

func (x *CourseServiceSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceSearchResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceSearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{11}
}

func (x *CourseServiceSearchResponse) GetCourses() []*SimpleCourse {
	if x != nil {
		return x.Courses
	}
	return nil
}

func (x *CourseServiceSearchResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// CourseSection 课程章节信息
type CourseSection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 章节唯一标识
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                              // 章节标题
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                // 章节描述
	OrderIndex    int32                  `protobuf:"varint,4,opt,name=order_index,json=orderIndex,proto3" json:"order_index,omitempty"` // 章节的显示顺序
	Status        int32                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                           // 章节状态：0-禁用，1-启用
	Units         []*CourseSectionUnit   `protobuf:"bytes,6,rep,name=units,proto3" json:"units,omitempty"`                              // 章节单元列表
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`     // 记录创建时间
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`     // 记录更新时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseSection) Reset() {
	*x = CourseSection{}
	mi := &file_proto_v1_course_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseSection) ProtoMessage() {}

func (x *CourseSection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseSection.ProtoReflect.Descriptor instead.
func (*CourseSection) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{12}
}

func (x *CourseSection) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseSection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseSection) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CourseSection) GetOrderIndex() int32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

func (x *CourseSection) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CourseSection) GetUnits() []*CourseSectionUnit {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *CourseSection) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CourseSection) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// CourseSectionUnit 课程章节单元信息
type CourseSectionUnit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 单元唯一标识
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                // 单元标题
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                  // 单元内容
	QuestionIds   string                 `protobuf:"bytes,4,opt,name=question_ids,json=questionIds,proto3" json:"question_ids,omitempty"` // 问题ID列表，存储关联题目的ID数组
	OrderIndex    int32                  `protobuf:"varint,5,opt,name=order_index,json=orderIndex,proto3" json:"order_index,omitempty"`   // 单元的显示顺序
	Status        int32                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                             // 单元状态：0-禁用，1-启用
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // 记录创建时间
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`       // 记录更新时间
	Tags          string                 `protobuf:"bytes,9,opt,name=tags,proto3" json:"tags,omitempty"`                                  // 标签，多个标签用逗号分隔
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseSectionUnit) Reset() {
	*x = CourseSectionUnit{}
	mi := &file_proto_v1_course_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseSectionUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseSectionUnit) ProtoMessage() {}

func (x *CourseSectionUnit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseSectionUnit.ProtoReflect.Descriptor instead.
func (*CourseSectionUnit) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{13}
}

func (x *CourseSectionUnit) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseSectionUnit) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseSectionUnit) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CourseSectionUnit) GetQuestionIds() string {
	if x != nil {
		return x.QuestionIds
	}
	return ""
}

func (x *CourseSectionUnit) GetOrderIndex() int32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

func (x *CourseSectionUnit) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CourseSectionUnit) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CourseSectionUnit) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CourseSectionUnit) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

// Section 相关请求响应消息
type CourseServiceCreateSectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      int64                  `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3" json:"course_id,omitempty"`       // 所属课程ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                              // 章节标题
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                // 章节描述
	OrderIndex    int32                  `protobuf:"varint,4,opt,name=order_index,json=orderIndex,proto3" json:"order_index,omitempty"` // 显示顺序
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceCreateSectionRequest) Reset() {
	*x = CourseServiceCreateSectionRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceCreateSectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceCreateSectionRequest) ProtoMessage() {}

func (x *CourseServiceCreateSectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceCreateSectionRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceCreateSectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{14}
}

func (x *CourseServiceCreateSectionRequest) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *CourseServiceCreateSectionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseServiceCreateSectionRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CourseServiceCreateSectionRequest) GetOrderIndex() int32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

type CourseServiceCreateSectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 创建的章节ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceCreateSectionResponse) Reset() {
	*x = CourseServiceCreateSectionResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceCreateSectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceCreateSectionResponse) ProtoMessage() {}

func (x *CourseServiceCreateSectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceCreateSectionResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceCreateSectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{15}
}

func (x *CourseServiceCreateSectionResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CourseServiceUpdateSectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // 章节ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                              // 章节标题
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                // 章节描述
	OrderIndex    int32                  `protobuf:"varint,4,opt,name=order_index,json=orderIndex,proto3" json:"order_index,omitempty"` // 显示顺序
	Status        int32                  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`                           // 状态：0-禁用，1-启用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceUpdateSectionRequest) Reset() {
	*x = CourseServiceUpdateSectionRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceUpdateSectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceUpdateSectionRequest) ProtoMessage() {}

func (x *CourseServiceUpdateSectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceUpdateSectionRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceUpdateSectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{16}
}

func (x *CourseServiceUpdateSectionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseServiceUpdateSectionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseServiceUpdateSectionRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CourseServiceUpdateSectionRequest) GetOrderIndex() int32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

func (x *CourseServiceUpdateSectionRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CourseServiceUpdateSectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 更新的章节ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceUpdateSectionResponse) Reset() {
	*x = CourseServiceUpdateSectionResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceUpdateSectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceUpdateSectionResponse) ProtoMessage() {}

func (x *CourseServiceUpdateSectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceUpdateSectionResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceUpdateSectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{17}
}

func (x *CourseServiceUpdateSectionResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CourseServiceDeleteSectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 章节ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceDeleteSectionRequest) Reset() {
	*x = CourseServiceDeleteSectionRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceDeleteSectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceDeleteSectionRequest) ProtoMessage() {}

func (x *CourseServiceDeleteSectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceDeleteSectionRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceDeleteSectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{18}
}

func (x *CourseServiceDeleteSectionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CourseServiceDeleteSectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceDeleteSectionResponse) Reset() {
	*x = CourseServiceDeleteSectionResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceDeleteSectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceDeleteSectionResponse) ProtoMessage() {}

func (x *CourseServiceDeleteSectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceDeleteSectionResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceDeleteSectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{19}
}

// Unit 相关请求响应消息
type CourseServiceCreateUnitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SectionId     int64                  `protobuf:"varint,1,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`      // 所属章节ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                // 单元标题
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                  // 单元内容
	QuestionIds   string                 `protobuf:"bytes,4,opt,name=question_ids,json=questionIds,proto3" json:"question_ids,omitempty"` // 问题ID列表
	OrderIndex    int32                  `protobuf:"varint,5,opt,name=order_index,json=orderIndex,proto3" json:"order_index,omitempty"`   // 显示顺序
	Tags          string                 `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`                                  // 标签
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceCreateUnitRequest) Reset() {
	*x = CourseServiceCreateUnitRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceCreateUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceCreateUnitRequest) ProtoMessage() {}

func (x *CourseServiceCreateUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceCreateUnitRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceCreateUnitRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{20}
}

func (x *CourseServiceCreateUnitRequest) GetSectionId() int64 {
	if x != nil {
		return x.SectionId
	}
	return 0
}

func (x *CourseServiceCreateUnitRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseServiceCreateUnitRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CourseServiceCreateUnitRequest) GetQuestionIds() string {
	if x != nil {
		return x.QuestionIds
	}
	return ""
}

func (x *CourseServiceCreateUnitRequest) GetOrderIndex() int32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

func (x *CourseServiceCreateUnitRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

type CourseServiceCreateUnitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 创建的单元ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceCreateUnitResponse) Reset() {
	*x = CourseServiceCreateUnitResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceCreateUnitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceCreateUnitResponse) ProtoMessage() {}

func (x *CourseServiceCreateUnitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceCreateUnitResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceCreateUnitResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{21}
}

func (x *CourseServiceCreateUnitResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CourseServiceUpdateUnitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // 单元ID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                // 单元标题
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`                                  // 单元内容
	QuestionIds   string                 `protobuf:"bytes,4,opt,name=question_ids,json=questionIds,proto3" json:"question_ids,omitempty"` // 问题ID列表
	OrderIndex    int32                  `protobuf:"varint,5,opt,name=order_index,json=orderIndex,proto3" json:"order_index,omitempty"`   // 显示顺序
	Status        int32                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                             // 状态：0-禁用，1-启用
	Tags          string                 `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`                                  // 标签
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceUpdateUnitRequest) Reset() {
	*x = CourseServiceUpdateUnitRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceUpdateUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceUpdateUnitRequest) ProtoMessage() {}

func (x *CourseServiceUpdateUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceUpdateUnitRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceUpdateUnitRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{22}
}

func (x *CourseServiceUpdateUnitRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseServiceUpdateUnitRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CourseServiceUpdateUnitRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CourseServiceUpdateUnitRequest) GetQuestionIds() string {
	if x != nil {
		return x.QuestionIds
	}
	return ""
}

func (x *CourseServiceUpdateUnitRequest) GetOrderIndex() int32 {
	if x != nil {
		return x.OrderIndex
	}
	return 0
}

func (x *CourseServiceUpdateUnitRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CourseServiceUpdateUnitRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

type CourseServiceUpdateUnitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 更新的单元ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceUpdateUnitResponse) Reset() {
	*x = CourseServiceUpdateUnitResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceUpdateUnitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceUpdateUnitResponse) ProtoMessage() {}

func (x *CourseServiceUpdateUnitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceUpdateUnitResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceUpdateUnitResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{23}
}

func (x *CourseServiceUpdateUnitResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CourseServiceDeleteUnitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 单元ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceDeleteUnitRequest) Reset() {
	*x = CourseServiceDeleteUnitRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceDeleteUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceDeleteUnitRequest) ProtoMessage() {}

func (x *CourseServiceDeleteUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceDeleteUnitRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceDeleteUnitRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{24}
}

func (x *CourseServiceDeleteUnitRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CourseServiceDeleteUnitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceDeleteUnitResponse) Reset() {
	*x = CourseServiceDeleteUnitResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceDeleteUnitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceDeleteUnitResponse) ProtoMessage() {}

func (x *CourseServiceDeleteUnitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceDeleteUnitResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceDeleteUnitResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{25}
}

// CourseServiceListRequest 获取课程列表请求
type CourseServiceListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                                // 页码，从1开始
	PageSize      uint32                 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`        // 每页数量
	Status        CourseStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=proto.v1.CourseStatus" json:"status,omitempty"` // 课程状态过滤
	Level         CourseLevel            `protobuf:"varint,4,opt,name=level,proto3,enum=proto.v1.CourseLevel" json:"level,omitempty"`    // 课程难度级别过滤
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`                                 // 标签过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceListRequest) Reset() {
	*x = CourseServiceListRequest{}
	mi := &file_proto_v1_course_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceListRequest) ProtoMessage() {}

func (x *CourseServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceListRequest.ProtoReflect.Descriptor instead.
func (*CourseServiceListRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{26}
}

func (x *CourseServiceListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CourseServiceListRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CourseServiceListRequest) GetStatus() CourseStatus {
	if x != nil {
		return x.Status
	}
	return CourseStatus_COURSE_STATUS_UNSPECIFIED
}

func (x *CourseServiceListRequest) GetLevel() CourseLevel {
	if x != nil {
		return x.Level
	}
	return CourseLevel_COURSE_LEVEL_UNSPECIFIED
}

func (x *CourseServiceListRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// CourseServiceListResponse 获取课程列表响应
type CourseServiceListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Courses       []*SimpleCourse        `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"` // 课程列表
	Total         uint32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`    // 总数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourseServiceListResponse) Reset() {
	*x = CourseServiceListResponse{}
	mi := &file_proto_v1_course_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourseServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseServiceListResponse) ProtoMessage() {}

func (x *CourseServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_course_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseServiceListResponse.ProtoReflect.Descriptor instead.
func (*CourseServiceListResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_course_proto_rawDescGZIP(), []int{27}
}

func (x *CourseServiceListResponse) GetCourses() []*SimpleCourse {
	if x != nil {
		return x.Courses
	}
	return nil
}

func (x *CourseServiceListResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_v1_course_proto protoreflect.FileDescriptor

var file_proto_v1_course_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x95, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x1a, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x2b, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x29, 0x0a, 0x17, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x18, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x22, 0x2c, 0x0a, 0x1a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d,
	0x0a, 0x1b, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa8, 0x01,
	0x0a, 0x1a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x65, 0x0a, 0x1b, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0xab, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb3, 0x02,
	0x0a, 0x11, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a,
	0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x21, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x34, 0x0a, 0x22, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x21, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x34, 0x0a, 0x22, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x21, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xc1, 0x01, 0x0a, 0x1e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a,
	0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x31, 0x0a, 0x1f, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x1e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x31, 0x0a, 0x1f, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1e, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbc, 0x01,
	0x0a, 0x18, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x63, 0x0a, 0x19,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x2a, 0x80, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x5f, 0x4c, 0x45, 0x56, 0x45,
	0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x19, 0x0a, 0x15, 0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x42, 0x45, 0x47, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f,
	0x55, 0x52, 0x53, 0x45, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4d, 0x45, 0x44, 0x49, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x55,
	0x52, 0x53, 0x45, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x41, 0x44, 0x56, 0x41, 0x4e, 0x43,
	0x45, 0x44, 0x10, 0x03, 0x2a, 0x7f, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17,
	0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x55,
	0x52, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49,
	0x56, 0x45, 0x44, 0x10, 0x03, 0x32, 0xf7, 0x08, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x31, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61,
	0x7a, 0x79, 0x6a, 0x65, 0x61, 0x6e, 0x2f, 0x73, 0x6c, 0x61, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0xba, 0x02, 0x04, 0x53, 0x4c,
	0x41, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_v1_course_proto_rawDescOnce sync.Once
	file_proto_v1_course_proto_rawDescData []byte
)

func file_proto_v1_course_proto_rawDescGZIP() []byte {
	file_proto_v1_course_proto_rawDescOnce.Do(func() {
		file_proto_v1_course_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_course_proto_rawDesc), len(file_proto_v1_course_proto_rawDesc)))
	})
	return file_proto_v1_course_proto_rawDescData
}

var file_proto_v1_course_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_v1_course_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_proto_v1_course_proto_goTypes = []any{
	(CourseLevel)(0),                           // 0: proto.v1.CourseLevel
	(CourseStatus)(0),                          // 1: proto.v1.CourseStatus
	(*Course)(nil),                             // 2: proto.v1.Course
	(*SimpleCourse)(nil),                       // 3: proto.v1.SimpleCourse
	(*CourseServiceCreateRequest)(nil),         // 4: proto.v1.CourseServiceCreateRequest
	(*CourseServiceCreateResponse)(nil),        // 5: proto.v1.CourseServiceCreateResponse
	(*CourseServiceUpdateRequest)(nil),         // 6: proto.v1.CourseServiceUpdateRequest
	(*CourseServiceUpdateResponse)(nil),        // 7: proto.v1.CourseServiceUpdateResponse
	(*CourseServiceGetRequest)(nil),            // 8: proto.v1.CourseServiceGetRequest
	(*CourseServiceGetResponse)(nil),           // 9: proto.v1.CourseServiceGetResponse
	(*CourseServiceDeleteRequest)(nil),         // 10: proto.v1.CourseServiceDeleteRequest
	(*CourseServiceDeleteResponse)(nil),        // 11: proto.v1.CourseServiceDeleteResponse
	(*CourseServiceSearchRequest)(nil),         // 12: proto.v1.CourseServiceSearchRequest
	(*CourseServiceSearchResponse)(nil),        // 13: proto.v1.CourseServiceSearchResponse
	(*CourseSection)(nil),                      // 14: proto.v1.CourseSection
	(*CourseSectionUnit)(nil),                  // 15: proto.v1.CourseSectionUnit
	(*CourseServiceCreateSectionRequest)(nil),  // 16: proto.v1.CourseServiceCreateSectionRequest
	(*CourseServiceCreateSectionResponse)(nil), // 17: proto.v1.CourseServiceCreateSectionResponse
	(*CourseServiceUpdateSectionRequest)(nil),  // 18: proto.v1.CourseServiceUpdateSectionRequest
	(*CourseServiceUpdateSectionResponse)(nil), // 19: proto.v1.CourseServiceUpdateSectionResponse
	(*CourseServiceDeleteSectionRequest)(nil),  // 20: proto.v1.CourseServiceDeleteSectionRequest
	(*CourseServiceDeleteSectionResponse)(nil), // 21: proto.v1.CourseServiceDeleteSectionResponse
	(*CourseServiceCreateUnitRequest)(nil),     // 22: proto.v1.CourseServiceCreateUnitRequest
	(*CourseServiceCreateUnitResponse)(nil),    // 23: proto.v1.CourseServiceCreateUnitResponse
	(*CourseServiceUpdateUnitRequest)(nil),     // 24: proto.v1.CourseServiceUpdateUnitRequest
	(*CourseServiceUpdateUnitResponse)(nil),    // 25: proto.v1.CourseServiceUpdateUnitResponse
	(*CourseServiceDeleteUnitRequest)(nil),     // 26: proto.v1.CourseServiceDeleteUnitRequest
	(*CourseServiceDeleteUnitResponse)(nil),    // 27: proto.v1.CourseServiceDeleteUnitResponse
	(*CourseServiceListRequest)(nil),           // 28: proto.v1.CourseServiceListRequest
	(*CourseServiceListResponse)(nil),          // 29: proto.v1.CourseServiceListResponse
	(*timestamppb.Timestamp)(nil),              // 30: google.protobuf.Timestamp
}
var file_proto_v1_course_proto_depIdxs = []int32{
	0,  // 0: proto.v1.Course.level:type_name -> proto.v1.CourseLevel
	1,  // 1: proto.v1.Course.status:type_name -> proto.v1.CourseStatus
	14, // 2: proto.v1.Course.sections:type_name -> proto.v1.CourseSection
	30, // 3: proto.v1.Course.created_at:type_name -> google.protobuf.Timestamp
	30, // 4: proto.v1.Course.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 5: proto.v1.SimpleCourse.level:type_name -> proto.v1.CourseLevel
	0,  // 6: proto.v1.CourseServiceCreateRequest.level:type_name -> proto.v1.CourseLevel
	0,  // 7: proto.v1.CourseServiceUpdateRequest.level:type_name -> proto.v1.CourseLevel
	1,  // 8: proto.v1.CourseServiceUpdateRequest.status:type_name -> proto.v1.CourseStatus
	2,  // 9: proto.v1.CourseServiceGetResponse.course:type_name -> proto.v1.Course
	0,  // 10: proto.v1.CourseServiceSearchRequest.level:type_name -> proto.v1.CourseLevel
	3,  // 11: proto.v1.CourseServiceSearchResponse.courses:type_name -> proto.v1.SimpleCourse
	15, // 12: proto.v1.CourseSection.units:type_name -> proto.v1.CourseSectionUnit
	30, // 13: proto.v1.CourseSection.created_at:type_name -> google.protobuf.Timestamp
	30, // 14: proto.v1.CourseSection.updated_at:type_name -> google.protobuf.Timestamp
	30, // 15: proto.v1.CourseSectionUnit.created_at:type_name -> google.protobuf.Timestamp
	30, // 16: proto.v1.CourseSectionUnit.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 17: proto.v1.CourseServiceListRequest.status:type_name -> proto.v1.CourseStatus
	0,  // 18: proto.v1.CourseServiceListRequest.level:type_name -> proto.v1.CourseLevel
	3,  // 19: proto.v1.CourseServiceListResponse.courses:type_name -> proto.v1.SimpleCourse
	4,  // 20: proto.v1.CourseService.Create:input_type -> proto.v1.CourseServiceCreateRequest
	6,  // 21: proto.v1.CourseService.Update:input_type -> proto.v1.CourseServiceUpdateRequest
	8,  // 22: proto.v1.CourseService.Get:input_type -> proto.v1.CourseServiceGetRequest
	28, // 23: proto.v1.CourseService.List:input_type -> proto.v1.CourseServiceListRequest
	10, // 24: proto.v1.CourseService.Delete:input_type -> proto.v1.CourseServiceDeleteRequest
	12, // 25: proto.v1.CourseService.Search:input_type -> proto.v1.CourseServiceSearchRequest
	16, // 26: proto.v1.CourseService.CreateSection:input_type -> proto.v1.CourseServiceCreateSectionRequest
	18, // 27: proto.v1.CourseService.UpdateSection:input_type -> proto.v1.CourseServiceUpdateSectionRequest
	20, // 28: proto.v1.CourseService.DeleteSection:input_type -> proto.v1.CourseServiceDeleteSectionRequest
	22, // 29: proto.v1.CourseService.CreateUnit:input_type -> proto.v1.CourseServiceCreateUnitRequest
	24, // 30: proto.v1.CourseService.UpdateUnit:input_type -> proto.v1.CourseServiceUpdateUnitRequest
	26, // 31: proto.v1.CourseService.DeleteUnit:input_type -> proto.v1.CourseServiceDeleteUnitRequest
	5,  // 32: proto.v1.CourseService.Create:output_type -> proto.v1.CourseServiceCreateResponse
	7,  // 33: proto.v1.CourseService.Update:output_type -> proto.v1.CourseServiceUpdateResponse
	9,  // 34: proto.v1.CourseService.Get:output_type -> proto.v1.CourseServiceGetResponse
	29, // 35: proto.v1.CourseService.List:output_type -> proto.v1.CourseServiceListResponse
	11, // 36: proto.v1.CourseService.Delete:output_type -> proto.v1.CourseServiceDeleteResponse
	13, // 37: proto.v1.CourseService.Search:output_type -> proto.v1.CourseServiceSearchResponse
	17, // 38: proto.v1.CourseService.CreateSection:output_type -> proto.v1.CourseServiceCreateSectionResponse
	19, // 39: proto.v1.CourseService.UpdateSection:output_type -> proto.v1.CourseServiceUpdateSectionResponse
	21, // 40: proto.v1.CourseService.DeleteSection:output_type -> proto.v1.CourseServiceDeleteSectionResponse
	23, // 41: proto.v1.CourseService.CreateUnit:output_type -> proto.v1.CourseServiceCreateUnitResponse
	25, // 42: proto.v1.CourseService.UpdateUnit:output_type -> proto.v1.CourseServiceUpdateUnitResponse
	27, // 43: proto.v1.CourseService.DeleteUnit:output_type -> proto.v1.CourseServiceDeleteUnitResponse
	32, // [32:44] is the sub-list for method output_type
	20, // [20:32] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_v1_course_proto_init() }
func file_proto_v1_course_proto_init() {
	if File_proto_v1_course_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_course_proto_rawDesc), len(file_proto_v1_course_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_course_proto_goTypes,
		DependencyIndexes: file_proto_v1_course_proto_depIdxs,
		EnumInfos:         file_proto_v1_course_proto_enumTypes,
		MessageInfos:      file_proto_v1_course_proto_msgTypes,
	}.Build()
	File_proto_v1_course_proto = out.File
	file_proto_v1_course_proto_goTypes = nil
	file_proto_v1_course_proto_depIdxs = nil
}
