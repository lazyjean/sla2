// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: api/proto/v1/learning.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LearningProgress struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WordId         int64                  `protobuf:"varint,2,opt,name=word_id,json=wordId,proto3" json:"word_id,omitempty"`
	Familiarity    int32                  `protobuf:"varint,3,opt,name=familiarity,proto3" json:"familiarity,omitempty"`
	NextReviewAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=next_review_at,json=nextReviewAt,proto3" json:"next_review_at,omitempty"`
	LastReviewedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_reviewed_at,json=lastReviewedAt,proto3" json:"last_reviewed_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LearningProgress) Reset() {
	*x = LearningProgress{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LearningProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearningProgress) ProtoMessage() {}

func (x *LearningProgress) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearningProgress.ProtoReflect.Descriptor instead.
func (*LearningProgress) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{0}
}

func (x *LearningProgress) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LearningProgress) GetWordId() int64 {
	if x != nil {
		return x.WordId
	}
	return 0
}

func (x *LearningProgress) GetFamiliarity() int32 {
	if x != nil {
		return x.Familiarity
	}
	return 0
}

func (x *LearningProgress) GetNextReviewAt() *timestamppb.Timestamp {
	if x != nil {
		return x.NextReviewAt
	}
	return nil
}

func (x *LearningProgress) GetLastReviewedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastReviewedAt
	}
	return nil
}

type UpdateLearningProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WordId        int64                  `protobuf:"varint,2,opt,name=word_id,json=wordId,proto3" json:"word_id,omitempty"`
	Familiarity   int32                  `protobuf:"varint,3,opt,name=familiarity,proto3" json:"familiarity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLearningProgressRequest) Reset() {
	*x = UpdateLearningProgressRequest{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLearningProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLearningProgressRequest) ProtoMessage() {}

func (x *UpdateLearningProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLearningProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdateLearningProgressRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateLearningProgressRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateLearningProgressRequest) GetWordId() int64 {
	if x != nil {
		return x.WordId
	}
	return 0
}

func (x *UpdateLearningProgressRequest) GetFamiliarity() int32 {
	if x != nil {
		return x.Familiarity
	}
	return 0
}

type UpdateLearningProgressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Progress      *LearningProgress      `protobuf:"bytes,1,opt,name=progress,proto3" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLearningProgressResponse) Reset() {
	*x = UpdateLearningProgressResponse{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLearningProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLearningProgressResponse) ProtoMessage() {}

func (x *UpdateLearningProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLearningProgressResponse.ProtoReflect.Descriptor instead.
func (*UpdateLearningProgressResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateLearningProgressResponse) GetProgress() *LearningProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type ListLearningProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLearningProgressRequest) Reset() {
	*x = ListLearningProgressRequest{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLearningProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLearningProgressRequest) ProtoMessage() {}

func (x *ListLearningProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLearningProgressRequest.ProtoReflect.Descriptor instead.
func (*ListLearningProgressRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{3}
}

func (x *ListLearningProgressRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListLearningProgressRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListLearningProgressRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListLearningProgressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProgressList  []*LearningProgress    `protobuf:"bytes,1,rep,name=progress_list,json=progressList,proto3" json:"progress_list,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLearningProgressResponse) Reset() {
	*x = ListLearningProgressResponse{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLearningProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLearningProgressResponse) ProtoMessage() {}

func (x *ListLearningProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLearningProgressResponse.ProtoReflect.Descriptor instead.
func (*ListLearningProgressResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{4}
}

func (x *ListLearningProgressResponse) GetProgressList() []*LearningProgress {
	if x != nil {
		return x.ProgressList
	}
	return nil
}

func (x *ListLearningProgressResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type LearningStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TotalWords      int32                  `protobuf:"varint,2,opt,name=total_words,json=totalWords,proto3" json:"total_words,omitempty"`
	MasteredWords   int32                  `protobuf:"varint,3,opt,name=mastered_words,json=masteredWords,proto3" json:"mastered_words,omitempty"`
	LearningWords   int32                  `protobuf:"varint,4,opt,name=learning_words,json=learningWords,proto3" json:"learning_words,omitempty"`
	ReviewDueCount  int32                  `protobuf:"varint,5,opt,name=review_due_count,json=reviewDueCount,proto3" json:"review_due_count,omitempty"`
	LastStudyTime   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_study_time,json=lastStudyTime,proto3" json:"last_study_time,omitempty"`
	TodayStudyCount int32                  `protobuf:"varint,7,opt,name=today_study_count,json=todayStudyCount,proto3" json:"today_study_count,omitempty"`
	ContinuousDays  int32                  `protobuf:"varint,8,opt,name=continuous_days,json=continuousDays,proto3" json:"continuous_days,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LearningStats) Reset() {
	*x = LearningStats{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LearningStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearningStats) ProtoMessage() {}

func (x *LearningStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearningStats.ProtoReflect.Descriptor instead.
func (*LearningStats) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{5}
}

func (x *LearningStats) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LearningStats) GetTotalWords() int32 {
	if x != nil {
		return x.TotalWords
	}
	return 0
}

func (x *LearningStats) GetMasteredWords() int32 {
	if x != nil {
		return x.MasteredWords
	}
	return 0
}

func (x *LearningStats) GetLearningWords() int32 {
	if x != nil {
		return x.LearningWords
	}
	return 0
}

func (x *LearningStats) GetReviewDueCount() int32 {
	if x != nil {
		return x.ReviewDueCount
	}
	return 0
}

func (x *LearningStats) GetLastStudyTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastStudyTime
	}
	return nil
}

func (x *LearningStats) GetTodayStudyCount() int32 {
	if x != nil {
		return x.TodayStudyCount
	}
	return 0
}

func (x *LearningStats) GetContinuousDays() int32 {
	if x != nil {
		return x.ContinuousDays
	}
	return 0
}

type GetLearningStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLearningStatsRequest) Reset() {
	*x = GetLearningStatsRequest{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLearningStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLearningStatsRequest) ProtoMessage() {}

func (x *GetLearningStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLearningStatsRequest.ProtoReflect.Descriptor instead.
func (*GetLearningStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{6}
}

func (x *GetLearningStatsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetLearningStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         *LearningStats         `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLearningStatsResponse) Reset() {
	*x = GetLearningStatsResponse{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLearningStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLearningStatsResponse) ProtoMessage() {}

func (x *GetLearningStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLearningStatsResponse.ProtoReflect.Descriptor instead.
func (*GetLearningStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{7}
}

func (x *GetLearningStatsResponse) GetStats() *LearningStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type ListReviewWordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReviewWordsRequest) Reset() {
	*x = ListReviewWordsRequest{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReviewWordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReviewWordsRequest) ProtoMessage() {}

func (x *ListReviewWordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReviewWordsRequest.ProtoReflect.Descriptor instead.
func (*ListReviewWordsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{8}
}

func (x *ListReviewWordsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListReviewWordsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListReviewWordsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListReviewWordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Words         []*Word                `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	ProgressList  []*LearningProgress    `protobuf:"bytes,2,rep,name=progress_list,json=progressList,proto3" json:"progress_list,omitempty"`
	Total         int32                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReviewWordsResponse) Reset() {
	*x = ListReviewWordsResponse{}
	mi := &file_api_proto_v1_learning_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReviewWordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReviewWordsResponse) ProtoMessage() {}

func (x *ListReviewWordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_learning_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReviewWordsResponse.ProtoReflect.Descriptor instead.
func (*ListReviewWordsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_learning_proto_rawDescGZIP(), []int{9}
}

func (x *ListReviewWordsResponse) GetWords() []*Word {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *ListReviewWordsResponse) GetProgressList() []*LearningProgress {
	if x != nil {
		return x.ProgressList
	}
	return nil
}

func (x *ListReviewWordsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_api_proto_v1_learning_proto protoreflect.FileDescriptor

var file_api_proto_v1_learning_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x6c, 0x61, 0x32, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xee, 0x01, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x69, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x61,
	0x6d, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6e,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x41, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x73, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x77,
	0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x69, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x69, 0x61, 0x72, 0x69, 0x74, 0x79, 0x22, 0x57, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6c, 0x61,
	0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x67, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x74, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x6c, 0x61, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xda,
	0x02, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x44, 0x75, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x53, 0x74, 0x75, 0x64, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73,
	0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x44, 0x61, 0x79, 0x73, 0x22, 0x32, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x48, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6c, 0x61,
	0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x16, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x94, 0x01,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x6c, 0x61, 0x32, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3e,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6c, 0x61, 0x32, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x32, 0x98, 0x03, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x2e, 0x73, 0x6c, 0x61, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x6c, 0x61,
	0x32, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x2e,
	0x73, 0x6c, 0x61, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x6c, 0x61, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x20, 0x2e, 0x73, 0x6c, 0x61, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x6c, 0x61, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x6c, 0x61,
	0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x6c,
	0x61, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x57, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69,
	0x75, 0x7a, 0x68, 0x65, 0x6e, 0x32, 0x31, 0x2f, 0x73, 0x6c, 0x61, 0x32, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_proto_v1_learning_proto_rawDescOnce sync.Once
	file_api_proto_v1_learning_proto_rawDescData []byte
)

func file_api_proto_v1_learning_proto_rawDescGZIP() []byte {
	file_api_proto_v1_learning_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_learning_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_v1_learning_proto_rawDesc), len(file_api_proto_v1_learning_proto_rawDesc)))
	})
	return file_api_proto_v1_learning_proto_rawDescData
}

var file_api_proto_v1_learning_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_proto_v1_learning_proto_goTypes = []any{
	(*LearningProgress)(nil),               // 0: sla2.v1.LearningProgress
	(*UpdateLearningProgressRequest)(nil),  // 1: sla2.v1.UpdateLearningProgressRequest
	(*UpdateLearningProgressResponse)(nil), // 2: sla2.v1.UpdateLearningProgressResponse
	(*ListLearningProgressRequest)(nil),    // 3: sla2.v1.ListLearningProgressRequest
	(*ListLearningProgressResponse)(nil),   // 4: sla2.v1.ListLearningProgressResponse
	(*LearningStats)(nil),                  // 5: sla2.v1.LearningStats
	(*GetLearningStatsRequest)(nil),        // 6: sla2.v1.GetLearningStatsRequest
	(*GetLearningStatsResponse)(nil),       // 7: sla2.v1.GetLearningStatsResponse
	(*ListReviewWordsRequest)(nil),         // 8: sla2.v1.ListReviewWordsRequest
	(*ListReviewWordsResponse)(nil),        // 9: sla2.v1.ListReviewWordsResponse
	(*timestamppb.Timestamp)(nil),          // 10: google.protobuf.Timestamp
	(*Word)(nil),                           // 11: sla2.v1.Word
}
var file_api_proto_v1_learning_proto_depIdxs = []int32{
	10, // 0: sla2.v1.LearningProgress.next_review_at:type_name -> google.protobuf.Timestamp
	10, // 1: sla2.v1.LearningProgress.last_reviewed_at:type_name -> google.protobuf.Timestamp
	0,  // 2: sla2.v1.UpdateLearningProgressResponse.progress:type_name -> sla2.v1.LearningProgress
	0,  // 3: sla2.v1.ListLearningProgressResponse.progress_list:type_name -> sla2.v1.LearningProgress
	10, // 4: sla2.v1.LearningStats.last_study_time:type_name -> google.protobuf.Timestamp
	5,  // 5: sla2.v1.GetLearningStatsResponse.stats:type_name -> sla2.v1.LearningStats
	11, // 6: sla2.v1.ListReviewWordsResponse.words:type_name -> sla2.v1.Word
	0,  // 7: sla2.v1.ListReviewWordsResponse.progress_list:type_name -> sla2.v1.LearningProgress
	1,  // 8: sla2.v1.LearningService.UpdateLearningProgress:input_type -> sla2.v1.UpdateLearningProgressRequest
	3,  // 9: sla2.v1.LearningService.ListLearningProgress:input_type -> sla2.v1.ListLearningProgressRequest
	6,  // 10: sla2.v1.LearningService.GetLearningStats:input_type -> sla2.v1.GetLearningStatsRequest
	8,  // 11: sla2.v1.LearningService.ListReviewWords:input_type -> sla2.v1.ListReviewWordsRequest
	2,  // 12: sla2.v1.LearningService.UpdateLearningProgress:output_type -> sla2.v1.UpdateLearningProgressResponse
	4,  // 13: sla2.v1.LearningService.ListLearningProgress:output_type -> sla2.v1.ListLearningProgressResponse
	7,  // 14: sla2.v1.LearningService.GetLearningStats:output_type -> sla2.v1.GetLearningStatsResponse
	9,  // 15: sla2.v1.LearningService.ListReviewWords:output_type -> sla2.v1.ListReviewWordsResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_proto_v1_learning_proto_init() }
func file_api_proto_v1_learning_proto_init() {
	if File_api_proto_v1_learning_proto != nil {
		return
	}
	file_api_proto_v1_word_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_v1_learning_proto_rawDesc), len(file_api_proto_v1_learning_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_v1_learning_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_learning_proto_depIdxs,
		MessageInfos:      file_api_proto_v1_learning_proto_msgTypes,
	}.Build()
	File_api_proto_v1_learning_proto = out.File
	file_api_proto_v1_learning_proto_goTypes = nil
	file_api_proto_v1_learning_proto_depIdxs = nil
}
